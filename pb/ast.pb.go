// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ast.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Comment struct {
	Slash                int32    `protobuf:"varint,1,opt,name=slash" json:"slash,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{0}
}
func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (dst *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(dst, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetSlash() int32 {
	if m != nil {
		return m.Slash
	}
	return 0
}

func (m *Comment) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type CommentGroup struct {
	List                 []*Comment `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CommentGroup) Reset()         { *m = CommentGroup{} }
func (m *CommentGroup) String() string { return proto.CompactTextString(m) }
func (*CommentGroup) ProtoMessage()    {}
func (*CommentGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{1}
}
func (m *CommentGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommentGroup.Unmarshal(m, b)
}
func (m *CommentGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommentGroup.Marshal(b, m, deterministic)
}
func (dst *CommentGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentGroup.Merge(dst, src)
}
func (m *CommentGroup) XXX_Size() int {
	return xxx_messageInfo_CommentGroup.Size(m)
}
func (m *CommentGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentGroup.DiscardUnknown(m)
}

var xxx_messageInfo_CommentGroup proto.InternalMessageInfo

func (m *CommentGroup) GetList() []*Comment {
	if m != nil {
		return m.List
	}
	return nil
}

type Field struct {
	Doc                  *CommentGroup `protobuf:"bytes,1,opt,name=doc" json:"doc,omitempty"`
	Names                []*Ident      `protobuf:"bytes,2,rep,name=names" json:"names,omitempty"`
	Type                 *any.Any      `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Tag                  *BasicLit     `protobuf:"bytes,4,opt,name=tag" json:"tag,omitempty"`
	Comment              *CommentGroup `protobuf:"bytes,5,opt,name=comment" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Field) Reset()         { *m = Field{} }
func (m *Field) String() string { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()    {}
func (*Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{2}
}
func (m *Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Field.Unmarshal(m, b)
}
func (m *Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Field.Marshal(b, m, deterministic)
}
func (dst *Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Field.Merge(dst, src)
}
func (m *Field) XXX_Size() int {
	return xxx_messageInfo_Field.Size(m)
}
func (m *Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Field proto.InternalMessageInfo

func (m *Field) GetDoc() *CommentGroup {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *Field) GetNames() []*Ident {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *Field) GetType() *any.Any {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Field) GetTag() *BasicLit {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *Field) GetComment() *CommentGroup {
	if m != nil {
		return m.Comment
	}
	return nil
}

type FieldList struct {
	Opening              int32    `protobuf:"varint,1,opt,name=opening" json:"opening,omitempty"`
	List                 []*Field `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	Closing              int32    `protobuf:"varint,3,opt,name=closing" json:"closing,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldList) Reset()         { *m = FieldList{} }
func (m *FieldList) String() string { return proto.CompactTextString(m) }
func (*FieldList) ProtoMessage()    {}
func (*FieldList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{3}
}
func (m *FieldList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldList.Unmarshal(m, b)
}
func (m *FieldList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldList.Marshal(b, m, deterministic)
}
func (dst *FieldList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldList.Merge(dst, src)
}
func (m *FieldList) XXX_Size() int {
	return xxx_messageInfo_FieldList.Size(m)
}
func (m *FieldList) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldList.DiscardUnknown(m)
}

var xxx_messageInfo_FieldList proto.InternalMessageInfo

func (m *FieldList) GetOpening() int32 {
	if m != nil {
		return m.Opening
	}
	return 0
}

func (m *FieldList) GetList() []*Field {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *FieldList) GetClosing() int32 {
	if m != nil {
		return m.Closing
	}
	return 0
}

type BadExpr struct {
	From                 int32     `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	To                   int32     `protobuf:"varint,2,opt,name=to" json:"to,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,3,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BadExpr) Reset()         { *m = BadExpr{} }
func (m *BadExpr) String() string { return proto.CompactTextString(m) }
func (*BadExpr) ProtoMessage()    {}
func (*BadExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{4}
}
func (m *BadExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BadExpr.Unmarshal(m, b)
}
func (m *BadExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BadExpr.Marshal(b, m, deterministic)
}
func (dst *BadExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BadExpr.Merge(dst, src)
}
func (m *BadExpr) XXX_Size() int {
	return xxx_messageInfo_BadExpr.Size(m)
}
func (m *BadExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_BadExpr.DiscardUnknown(m)
}

var xxx_messageInfo_BadExpr proto.InternalMessageInfo

func (m *BadExpr) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *BadExpr) GetTo() int32 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *BadExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type Ident struct {
	NamePos              int32     `protobuf:"varint,1,opt,name=name_pos,json=namePos" json:"name_pos,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,3,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	DefTypeInfo          *TypeInfo `protobuf:"bytes,4,opt,name=def_type_info,json=defTypeInfo" json:"def_type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Ident) Reset()         { *m = Ident{} }
func (m *Ident) String() string { return proto.CompactTextString(m) }
func (*Ident) ProtoMessage()    {}
func (*Ident) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{5}
}
func (m *Ident) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ident.Unmarshal(m, b)
}
func (m *Ident) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ident.Marshal(b, m, deterministic)
}
func (dst *Ident) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ident.Merge(dst, src)
}
func (m *Ident) XXX_Size() int {
	return xxx_messageInfo_Ident.Size(m)
}
func (m *Ident) XXX_DiscardUnknown() {
	xxx_messageInfo_Ident.DiscardUnknown(m)
}

var xxx_messageInfo_Ident proto.InternalMessageInfo

func (m *Ident) GetNamePos() int32 {
	if m != nil {
		return m.NamePos
	}
	return 0
}

func (m *Ident) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Ident) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

func (m *Ident) GetDefTypeInfo() *TypeInfo {
	if m != nil {
		return m.DefTypeInfo
	}
	return nil
}

type Ellipsis struct {
	Ellipsis             int32     `protobuf:"varint,1,opt,name=ellipsis" json:"ellipsis,omitempty"`
	Elt                  *any.Any  `protobuf:"bytes,2,opt,name=elt" json:"elt,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,3,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Ellipsis) Reset()         { *m = Ellipsis{} }
func (m *Ellipsis) String() string { return proto.CompactTextString(m) }
func (*Ellipsis) ProtoMessage()    {}
func (*Ellipsis) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{6}
}
func (m *Ellipsis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ellipsis.Unmarshal(m, b)
}
func (m *Ellipsis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ellipsis.Marshal(b, m, deterministic)
}
func (dst *Ellipsis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ellipsis.Merge(dst, src)
}
func (m *Ellipsis) XXX_Size() int {
	return xxx_messageInfo_Ellipsis.Size(m)
}
func (m *Ellipsis) XXX_DiscardUnknown() {
	xxx_messageInfo_Ellipsis.DiscardUnknown(m)
}

var xxx_messageInfo_Ellipsis proto.InternalMessageInfo

func (m *Ellipsis) GetEllipsis() int32 {
	if m != nil {
		return m.Ellipsis
	}
	return 0
}

func (m *Ellipsis) GetElt() *any.Any {
	if m != nil {
		return m.Elt
	}
	return nil
}

func (m *Ellipsis) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type BasicLit struct {
	ValuePos             int32     `protobuf:"varint,1,opt,name=value_pos,json=valuePos" json:"value_pos,omitempty"`
	Kind                 Token     `protobuf:"varint,2,opt,name=kind,enum=pb.Token" json:"kind,omitempty"`
	Value                string    `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,4,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BasicLit) Reset()         { *m = BasicLit{} }
func (m *BasicLit) String() string { return proto.CompactTextString(m) }
func (*BasicLit) ProtoMessage()    {}
func (*BasicLit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{7}
}
func (m *BasicLit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicLit.Unmarshal(m, b)
}
func (m *BasicLit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicLit.Marshal(b, m, deterministic)
}
func (dst *BasicLit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicLit.Merge(dst, src)
}
func (m *BasicLit) XXX_Size() int {
	return xxx_messageInfo_BasicLit.Size(m)
}
func (m *BasicLit) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicLit.DiscardUnknown(m)
}

var xxx_messageInfo_BasicLit proto.InternalMessageInfo

func (m *BasicLit) GetValuePos() int32 {
	if m != nil {
		return m.ValuePos
	}
	return 0
}

func (m *BasicLit) GetKind() Token {
	if m != nil {
		return m.Kind
	}
	return Token_ILLEGAL
}

func (m *BasicLit) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *BasicLit) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type FuncLit struct {
	Type                 *FuncType  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Body                 *BlockStmt `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	TypeInfo             *TypeInfo  `protobuf:"bytes,3,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FuncLit) Reset()         { *m = FuncLit{} }
func (m *FuncLit) String() string { return proto.CompactTextString(m) }
func (*FuncLit) ProtoMessage()    {}
func (*FuncLit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{8}
}
func (m *FuncLit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FuncLit.Unmarshal(m, b)
}
func (m *FuncLit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FuncLit.Marshal(b, m, deterministic)
}
func (dst *FuncLit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuncLit.Merge(dst, src)
}
func (m *FuncLit) XXX_Size() int {
	return xxx_messageInfo_FuncLit.Size(m)
}
func (m *FuncLit) XXX_DiscardUnknown() {
	xxx_messageInfo_FuncLit.DiscardUnknown(m)
}

var xxx_messageInfo_FuncLit proto.InternalMessageInfo

func (m *FuncLit) GetType() *FuncType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *FuncLit) GetBody() *BlockStmt {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *FuncLit) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type CompositeLit struct {
	Type                 *any.Any   `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Lbrace               int32      `protobuf:"varint,2,opt,name=lbrace" json:"lbrace,omitempty"`
	Elts                 []*any.Any `protobuf:"bytes,3,rep,name=elts" json:"elts,omitempty"`
	Rbrace               int32      `protobuf:"varint,4,opt,name=rbrace" json:"rbrace,omitempty"`
	TypeInfo             *TypeInfo  `protobuf:"bytes,5,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CompositeLit) Reset()         { *m = CompositeLit{} }
func (m *CompositeLit) String() string { return proto.CompactTextString(m) }
func (*CompositeLit) ProtoMessage()    {}
func (*CompositeLit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{9}
}
func (m *CompositeLit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompositeLit.Unmarshal(m, b)
}
func (m *CompositeLit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompositeLit.Marshal(b, m, deterministic)
}
func (dst *CompositeLit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompositeLit.Merge(dst, src)
}
func (m *CompositeLit) XXX_Size() int {
	return xxx_messageInfo_CompositeLit.Size(m)
}
func (m *CompositeLit) XXX_DiscardUnknown() {
	xxx_messageInfo_CompositeLit.DiscardUnknown(m)
}

var xxx_messageInfo_CompositeLit proto.InternalMessageInfo

func (m *CompositeLit) GetType() *any.Any {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CompositeLit) GetLbrace() int32 {
	if m != nil {
		return m.Lbrace
	}
	return 0
}

func (m *CompositeLit) GetElts() []*any.Any {
	if m != nil {
		return m.Elts
	}
	return nil
}

func (m *CompositeLit) GetRbrace() int32 {
	if m != nil {
		return m.Rbrace
	}
	return 0
}

func (m *CompositeLit) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type ParenExpr struct {
	Lparen               int32     `protobuf:"varint,1,opt,name=lparen" json:"lparen,omitempty"`
	X                    *any.Any  `protobuf:"bytes,2,opt,name=x" json:"x,omitempty"`
	Rparen               int32     `protobuf:"varint,3,opt,name=rparen" json:"rparen,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,4,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ParenExpr) Reset()         { *m = ParenExpr{} }
func (m *ParenExpr) String() string { return proto.CompactTextString(m) }
func (*ParenExpr) ProtoMessage()    {}
func (*ParenExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{10}
}
func (m *ParenExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParenExpr.Unmarshal(m, b)
}
func (m *ParenExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParenExpr.Marshal(b, m, deterministic)
}
func (dst *ParenExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParenExpr.Merge(dst, src)
}
func (m *ParenExpr) XXX_Size() int {
	return xxx_messageInfo_ParenExpr.Size(m)
}
func (m *ParenExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_ParenExpr.DiscardUnknown(m)
}

var xxx_messageInfo_ParenExpr proto.InternalMessageInfo

func (m *ParenExpr) GetLparen() int32 {
	if m != nil {
		return m.Lparen
	}
	return 0
}

func (m *ParenExpr) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *ParenExpr) GetRparen() int32 {
	if m != nil {
		return m.Rparen
	}
	return 0
}

func (m *ParenExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type SelectorExpr struct {
	X                    *any.Any  `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	Sel                  *Ident    `protobuf:"bytes,2,opt,name=sel" json:"sel,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,3,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SelectorExpr) Reset()         { *m = SelectorExpr{} }
func (m *SelectorExpr) String() string { return proto.CompactTextString(m) }
func (*SelectorExpr) ProtoMessage()    {}
func (*SelectorExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{11}
}
func (m *SelectorExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectorExpr.Unmarshal(m, b)
}
func (m *SelectorExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectorExpr.Marshal(b, m, deterministic)
}
func (dst *SelectorExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectorExpr.Merge(dst, src)
}
func (m *SelectorExpr) XXX_Size() int {
	return xxx_messageInfo_SelectorExpr.Size(m)
}
func (m *SelectorExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectorExpr.DiscardUnknown(m)
}

var xxx_messageInfo_SelectorExpr proto.InternalMessageInfo

func (m *SelectorExpr) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *SelectorExpr) GetSel() *Ident {
	if m != nil {
		return m.Sel
	}
	return nil
}

func (m *SelectorExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type IndexExpr struct {
	X                    *any.Any  `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	Lbrack               int32     `protobuf:"varint,2,opt,name=lbrack" json:"lbrack,omitempty"`
	Index                *any.Any  `protobuf:"bytes,3,opt,name=index" json:"index,omitempty"`
	Rbrack               int32     `protobuf:"varint,4,opt,name=rbrack" json:"rbrack,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,5,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IndexExpr) Reset()         { *m = IndexExpr{} }
func (m *IndexExpr) String() string { return proto.CompactTextString(m) }
func (*IndexExpr) ProtoMessage()    {}
func (*IndexExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{12}
}
func (m *IndexExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexExpr.Unmarshal(m, b)
}
func (m *IndexExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexExpr.Marshal(b, m, deterministic)
}
func (dst *IndexExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexExpr.Merge(dst, src)
}
func (m *IndexExpr) XXX_Size() int {
	return xxx_messageInfo_IndexExpr.Size(m)
}
func (m *IndexExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexExpr.DiscardUnknown(m)
}

var xxx_messageInfo_IndexExpr proto.InternalMessageInfo

func (m *IndexExpr) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *IndexExpr) GetLbrack() int32 {
	if m != nil {
		return m.Lbrack
	}
	return 0
}

func (m *IndexExpr) GetIndex() *any.Any {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *IndexExpr) GetRbrack() int32 {
	if m != nil {
		return m.Rbrack
	}
	return 0
}

func (m *IndexExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type SliceExpr struct {
	X                    *any.Any  `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	Lbrack               int32     `protobuf:"varint,2,opt,name=lbrack" json:"lbrack,omitempty"`
	Low                  *any.Any  `protobuf:"bytes,3,opt,name=low" json:"low,omitempty"`
	High                 *any.Any  `protobuf:"bytes,4,opt,name=high" json:"high,omitempty"`
	Max                  *any.Any  `protobuf:"bytes,5,opt,name=max" json:"max,omitempty"`
	Slice3               bool      `protobuf:"varint,6,opt,name=slice3" json:"slice3,omitempty"`
	Rbrack               int32     `protobuf:"varint,7,opt,name=rbrack" json:"rbrack,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,8,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SliceExpr) Reset()         { *m = SliceExpr{} }
func (m *SliceExpr) String() string { return proto.CompactTextString(m) }
func (*SliceExpr) ProtoMessage()    {}
func (*SliceExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{13}
}
func (m *SliceExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SliceExpr.Unmarshal(m, b)
}
func (m *SliceExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SliceExpr.Marshal(b, m, deterministic)
}
func (dst *SliceExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SliceExpr.Merge(dst, src)
}
func (m *SliceExpr) XXX_Size() int {
	return xxx_messageInfo_SliceExpr.Size(m)
}
func (m *SliceExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_SliceExpr.DiscardUnknown(m)
}

var xxx_messageInfo_SliceExpr proto.InternalMessageInfo

func (m *SliceExpr) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *SliceExpr) GetLbrack() int32 {
	if m != nil {
		return m.Lbrack
	}
	return 0
}

func (m *SliceExpr) GetLow() *any.Any {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *SliceExpr) GetHigh() *any.Any {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *SliceExpr) GetMax() *any.Any {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *SliceExpr) GetSlice3() bool {
	if m != nil {
		return m.Slice3
	}
	return false
}

func (m *SliceExpr) GetRbrack() int32 {
	if m != nil {
		return m.Rbrack
	}
	return 0
}

func (m *SliceExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type TypeAssertExpr struct {
	X                    *any.Any  `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	Lparen               int32     `protobuf:"varint,2,opt,name=lparen" json:"lparen,omitempty"`
	Type                 *any.Any  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Rparen               int32     `protobuf:"varint,4,opt,name=rparen" json:"rparen,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,5,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TypeAssertExpr) Reset()         { *m = TypeAssertExpr{} }
func (m *TypeAssertExpr) String() string { return proto.CompactTextString(m) }
func (*TypeAssertExpr) ProtoMessage()    {}
func (*TypeAssertExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{14}
}
func (m *TypeAssertExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeAssertExpr.Unmarshal(m, b)
}
func (m *TypeAssertExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeAssertExpr.Marshal(b, m, deterministic)
}
func (dst *TypeAssertExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeAssertExpr.Merge(dst, src)
}
func (m *TypeAssertExpr) XXX_Size() int {
	return xxx_messageInfo_TypeAssertExpr.Size(m)
}
func (m *TypeAssertExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeAssertExpr.DiscardUnknown(m)
}

var xxx_messageInfo_TypeAssertExpr proto.InternalMessageInfo

func (m *TypeAssertExpr) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *TypeAssertExpr) GetLparen() int32 {
	if m != nil {
		return m.Lparen
	}
	return 0
}

func (m *TypeAssertExpr) GetType() *any.Any {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *TypeAssertExpr) GetRparen() int32 {
	if m != nil {
		return m.Rparen
	}
	return 0
}

func (m *TypeAssertExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type CallExpr struct {
	Fun                  *any.Any   `protobuf:"bytes,1,opt,name=fun" json:"fun,omitempty"`
	Lparen               int32      `protobuf:"varint,2,opt,name=lparen" json:"lparen,omitempty"`
	Args                 []*any.Any `protobuf:"bytes,3,rep,name=args" json:"args,omitempty"`
	Ellipsis             int32      `protobuf:"varint,4,opt,name=ellipsis" json:"ellipsis,omitempty"`
	Rparen               int32      `protobuf:"varint,5,opt,name=rparen" json:"rparen,omitempty"`
	TypeInfo             *TypeInfo  `protobuf:"bytes,6,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CallExpr) Reset()         { *m = CallExpr{} }
func (m *CallExpr) String() string { return proto.CompactTextString(m) }
func (*CallExpr) ProtoMessage()    {}
func (*CallExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{15}
}
func (m *CallExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallExpr.Unmarshal(m, b)
}
func (m *CallExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallExpr.Marshal(b, m, deterministic)
}
func (dst *CallExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallExpr.Merge(dst, src)
}
func (m *CallExpr) XXX_Size() int {
	return xxx_messageInfo_CallExpr.Size(m)
}
func (m *CallExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_CallExpr.DiscardUnknown(m)
}

var xxx_messageInfo_CallExpr proto.InternalMessageInfo

func (m *CallExpr) GetFun() *any.Any {
	if m != nil {
		return m.Fun
	}
	return nil
}

func (m *CallExpr) GetLparen() int32 {
	if m != nil {
		return m.Lparen
	}
	return 0
}

func (m *CallExpr) GetArgs() []*any.Any {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *CallExpr) GetEllipsis() int32 {
	if m != nil {
		return m.Ellipsis
	}
	return 0
}

func (m *CallExpr) GetRparen() int32 {
	if m != nil {
		return m.Rparen
	}
	return 0
}

func (m *CallExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type StarExpr struct {
	Star                 int32     `protobuf:"varint,1,opt,name=star" json:"star,omitempty"`
	X                    *any.Any  `protobuf:"bytes,2,opt,name=x" json:"x,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,3,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StarExpr) Reset()         { *m = StarExpr{} }
func (m *StarExpr) String() string { return proto.CompactTextString(m) }
func (*StarExpr) ProtoMessage()    {}
func (*StarExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{16}
}
func (m *StarExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StarExpr.Unmarshal(m, b)
}
func (m *StarExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StarExpr.Marshal(b, m, deterministic)
}
func (dst *StarExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StarExpr.Merge(dst, src)
}
func (m *StarExpr) XXX_Size() int {
	return xxx_messageInfo_StarExpr.Size(m)
}
func (m *StarExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_StarExpr.DiscardUnknown(m)
}

var xxx_messageInfo_StarExpr proto.InternalMessageInfo

func (m *StarExpr) GetStar() int32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *StarExpr) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *StarExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type UnaryExpr struct {
	OpPos                int32     `protobuf:"varint,1,opt,name=op_pos,json=opPos" json:"op_pos,omitempty"`
	Op                   Token     `protobuf:"varint,2,opt,name=op,enum=pb.Token" json:"op,omitempty"`
	X                    *any.Any  `protobuf:"bytes,3,opt,name=x" json:"x,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,4,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UnaryExpr) Reset()         { *m = UnaryExpr{} }
func (m *UnaryExpr) String() string { return proto.CompactTextString(m) }
func (*UnaryExpr) ProtoMessage()    {}
func (*UnaryExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{17}
}
func (m *UnaryExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnaryExpr.Unmarshal(m, b)
}
func (m *UnaryExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnaryExpr.Marshal(b, m, deterministic)
}
func (dst *UnaryExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnaryExpr.Merge(dst, src)
}
func (m *UnaryExpr) XXX_Size() int {
	return xxx_messageInfo_UnaryExpr.Size(m)
}
func (m *UnaryExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_UnaryExpr.DiscardUnknown(m)
}

var xxx_messageInfo_UnaryExpr proto.InternalMessageInfo

func (m *UnaryExpr) GetOpPos() int32 {
	if m != nil {
		return m.OpPos
	}
	return 0
}

func (m *UnaryExpr) GetOp() Token {
	if m != nil {
		return m.Op
	}
	return Token_ILLEGAL
}

func (m *UnaryExpr) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *UnaryExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type BinaryExpr struct {
	X                    *any.Any  `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	OpPos                int32     `protobuf:"varint,2,opt,name=op_pos,json=opPos" json:"op_pos,omitempty"`
	Op                   Token     `protobuf:"varint,3,opt,name=op,enum=pb.Token" json:"op,omitempty"`
	Y                    *any.Any  `protobuf:"bytes,4,opt,name=y" json:"y,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,5,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BinaryExpr) Reset()         { *m = BinaryExpr{} }
func (m *BinaryExpr) String() string { return proto.CompactTextString(m) }
func (*BinaryExpr) ProtoMessage()    {}
func (*BinaryExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{18}
}
func (m *BinaryExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryExpr.Unmarshal(m, b)
}
func (m *BinaryExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryExpr.Marshal(b, m, deterministic)
}
func (dst *BinaryExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryExpr.Merge(dst, src)
}
func (m *BinaryExpr) XXX_Size() int {
	return xxx_messageInfo_BinaryExpr.Size(m)
}
func (m *BinaryExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryExpr.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryExpr proto.InternalMessageInfo

func (m *BinaryExpr) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *BinaryExpr) GetOpPos() int32 {
	if m != nil {
		return m.OpPos
	}
	return 0
}

func (m *BinaryExpr) GetOp() Token {
	if m != nil {
		return m.Op
	}
	return Token_ILLEGAL
}

func (m *BinaryExpr) GetY() *any.Any {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *BinaryExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type KeyValueExpr struct {
	Key                  *any.Any  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Colon                int32     `protobuf:"varint,2,opt,name=colon" json:"colon,omitempty"`
	Value                *any.Any  `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,4,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *KeyValueExpr) Reset()         { *m = KeyValueExpr{} }
func (m *KeyValueExpr) String() string { return proto.CompactTextString(m) }
func (*KeyValueExpr) ProtoMessage()    {}
func (*KeyValueExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{19}
}
func (m *KeyValueExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValueExpr.Unmarshal(m, b)
}
func (m *KeyValueExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValueExpr.Marshal(b, m, deterministic)
}
func (dst *KeyValueExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValueExpr.Merge(dst, src)
}
func (m *KeyValueExpr) XXX_Size() int {
	return xxx_messageInfo_KeyValueExpr.Size(m)
}
func (m *KeyValueExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValueExpr.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValueExpr proto.InternalMessageInfo

func (m *KeyValueExpr) GetKey() *any.Any {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValueExpr) GetColon() int32 {
	if m != nil {
		return m.Colon
	}
	return 0
}

func (m *KeyValueExpr) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KeyValueExpr) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type ArrayType struct {
	Lbrack               int32     `protobuf:"varint,1,opt,name=lbrack" json:"lbrack,omitempty"`
	Len                  *any.Any  `protobuf:"bytes,2,opt,name=len" json:"len,omitempty"`
	Elt                  *any.Any  `protobuf:"bytes,3,opt,name=elt" json:"elt,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,4,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ArrayType) Reset()         { *m = ArrayType{} }
func (m *ArrayType) String() string { return proto.CompactTextString(m) }
func (*ArrayType) ProtoMessage()    {}
func (*ArrayType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{20}
}
func (m *ArrayType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrayType.Unmarshal(m, b)
}
func (m *ArrayType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrayType.Marshal(b, m, deterministic)
}
func (dst *ArrayType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrayType.Merge(dst, src)
}
func (m *ArrayType) XXX_Size() int {
	return xxx_messageInfo_ArrayType.Size(m)
}
func (m *ArrayType) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrayType.DiscardUnknown(m)
}

var xxx_messageInfo_ArrayType proto.InternalMessageInfo

func (m *ArrayType) GetLbrack() int32 {
	if m != nil {
		return m.Lbrack
	}
	return 0
}

func (m *ArrayType) GetLen() *any.Any {
	if m != nil {
		return m.Len
	}
	return nil
}

func (m *ArrayType) GetElt() *any.Any {
	if m != nil {
		return m.Elt
	}
	return nil
}

func (m *ArrayType) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type StructType struct {
	Struct               int32      `protobuf:"varint,1,opt,name=struct" json:"struct,omitempty"`
	Fields               *FieldList `protobuf:"bytes,2,opt,name=fields" json:"fields,omitempty"`
	Incomplete           bool       `protobuf:"varint,3,opt,name=incomplete" json:"incomplete,omitempty"`
	TypeInfo             *TypeInfo  `protobuf:"bytes,4,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StructType) Reset()         { *m = StructType{} }
func (m *StructType) String() string { return proto.CompactTextString(m) }
func (*StructType) ProtoMessage()    {}
func (*StructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{21}
}
func (m *StructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructType.Unmarshal(m, b)
}
func (m *StructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructType.Marshal(b, m, deterministic)
}
func (dst *StructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructType.Merge(dst, src)
}
func (m *StructType) XXX_Size() int {
	return xxx_messageInfo_StructType.Size(m)
}
func (m *StructType) XXX_DiscardUnknown() {
	xxx_messageInfo_StructType.DiscardUnknown(m)
}

var xxx_messageInfo_StructType proto.InternalMessageInfo

func (m *StructType) GetStruct() int32 {
	if m != nil {
		return m.Struct
	}
	return 0
}

func (m *StructType) GetFields() *FieldList {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *StructType) GetIncomplete() bool {
	if m != nil {
		return m.Incomplete
	}
	return false
}

func (m *StructType) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type FuncType struct {
	Func                 int32      `protobuf:"varint,1,opt,name=func" json:"func,omitempty"`
	Params               *FieldList `protobuf:"bytes,2,opt,name=params" json:"params,omitempty"`
	Results              *FieldList `protobuf:"bytes,3,opt,name=results" json:"results,omitempty"`
	TypeInfo             *TypeInfo  `protobuf:"bytes,4,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FuncType) Reset()         { *m = FuncType{} }
func (m *FuncType) String() string { return proto.CompactTextString(m) }
func (*FuncType) ProtoMessage()    {}
func (*FuncType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{22}
}
func (m *FuncType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FuncType.Unmarshal(m, b)
}
func (m *FuncType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FuncType.Marshal(b, m, deterministic)
}
func (dst *FuncType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuncType.Merge(dst, src)
}
func (m *FuncType) XXX_Size() int {
	return xxx_messageInfo_FuncType.Size(m)
}
func (m *FuncType) XXX_DiscardUnknown() {
	xxx_messageInfo_FuncType.DiscardUnknown(m)
}

var xxx_messageInfo_FuncType proto.InternalMessageInfo

func (m *FuncType) GetFunc() int32 {
	if m != nil {
		return m.Func
	}
	return 0
}

func (m *FuncType) GetParams() *FieldList {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *FuncType) GetResults() *FieldList {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *FuncType) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type InterfaceType struct {
	Interface            int32      `protobuf:"varint,1,opt,name=interface" json:"interface,omitempty"`
	Methods              *FieldList `protobuf:"bytes,2,opt,name=methods" json:"methods,omitempty"`
	Incomplete           bool       `protobuf:"varint,3,opt,name=incomplete" json:"incomplete,omitempty"`
	TypeInfo             *TypeInfo  `protobuf:"bytes,4,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *InterfaceType) Reset()         { *m = InterfaceType{} }
func (m *InterfaceType) String() string { return proto.CompactTextString(m) }
func (*InterfaceType) ProtoMessage()    {}
func (*InterfaceType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{23}
}
func (m *InterfaceType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceType.Unmarshal(m, b)
}
func (m *InterfaceType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceType.Marshal(b, m, deterministic)
}
func (dst *InterfaceType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceType.Merge(dst, src)
}
func (m *InterfaceType) XXX_Size() int {
	return xxx_messageInfo_InterfaceType.Size(m)
}
func (m *InterfaceType) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceType.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceType proto.InternalMessageInfo

func (m *InterfaceType) GetInterface() int32 {
	if m != nil {
		return m.Interface
	}
	return 0
}

func (m *InterfaceType) GetMethods() *FieldList {
	if m != nil {
		return m.Methods
	}
	return nil
}

func (m *InterfaceType) GetIncomplete() bool {
	if m != nil {
		return m.Incomplete
	}
	return false
}

func (m *InterfaceType) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type MapType struct {
	Map                  int32     `protobuf:"varint,1,opt,name=map" json:"map,omitempty"`
	Key                  *any.Any  `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value                *any.Any  `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,4,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MapType) Reset()         { *m = MapType{} }
func (m *MapType) String() string { return proto.CompactTextString(m) }
func (*MapType) ProtoMessage()    {}
func (*MapType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{24}
}
func (m *MapType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapType.Unmarshal(m, b)
}
func (m *MapType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapType.Marshal(b, m, deterministic)
}
func (dst *MapType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapType.Merge(dst, src)
}
func (m *MapType) XXX_Size() int {
	return xxx_messageInfo_MapType.Size(m)
}
func (m *MapType) XXX_DiscardUnknown() {
	xxx_messageInfo_MapType.DiscardUnknown(m)
}

var xxx_messageInfo_MapType proto.InternalMessageInfo

func (m *MapType) GetMap() int32 {
	if m != nil {
		return m.Map
	}
	return 0
}

func (m *MapType) GetKey() *any.Any {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MapType) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MapType) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type ChanType struct {
	Begin                int32     `protobuf:"varint,1,opt,name=begin" json:"begin,omitempty"`
	Arrow                int32     `protobuf:"varint,2,opt,name=arrow" json:"arrow,omitempty"`
	SendDir              bool      `protobuf:"varint,3,opt,name=send_dir,json=sendDir" json:"send_dir,omitempty"`
	RecvDir              bool      `protobuf:"varint,4,opt,name=recv_dir,json=recvDir" json:"recv_dir,omitempty"`
	Value                *any.Any  `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
	TypeInfo             *TypeInfo `protobuf:"bytes,6,opt,name=type_info,json=typeInfo" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ChanType) Reset()         { *m = ChanType{} }
func (m *ChanType) String() string { return proto.CompactTextString(m) }
func (*ChanType) ProtoMessage()    {}
func (*ChanType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{25}
}
func (m *ChanType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChanType.Unmarshal(m, b)
}
func (m *ChanType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChanType.Marshal(b, m, deterministic)
}
func (dst *ChanType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChanType.Merge(dst, src)
}
func (m *ChanType) XXX_Size() int {
	return xxx_messageInfo_ChanType.Size(m)
}
func (m *ChanType) XXX_DiscardUnknown() {
	xxx_messageInfo_ChanType.DiscardUnknown(m)
}

var xxx_messageInfo_ChanType proto.InternalMessageInfo

func (m *ChanType) GetBegin() int32 {
	if m != nil {
		return m.Begin
	}
	return 0
}

func (m *ChanType) GetArrow() int32 {
	if m != nil {
		return m.Arrow
	}
	return 0
}

func (m *ChanType) GetSendDir() bool {
	if m != nil {
		return m.SendDir
	}
	return false
}

func (m *ChanType) GetRecvDir() bool {
	if m != nil {
		return m.RecvDir
	}
	return false
}

func (m *ChanType) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ChanType) GetTypeInfo() *TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type BadStmt struct {
	From                 int32    `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	To                   int32    `protobuf:"varint,2,opt,name=to" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BadStmt) Reset()         { *m = BadStmt{} }
func (m *BadStmt) String() string { return proto.CompactTextString(m) }
func (*BadStmt) ProtoMessage()    {}
func (*BadStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{26}
}
func (m *BadStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BadStmt.Unmarshal(m, b)
}
func (m *BadStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BadStmt.Marshal(b, m, deterministic)
}
func (dst *BadStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BadStmt.Merge(dst, src)
}
func (m *BadStmt) XXX_Size() int {
	return xxx_messageInfo_BadStmt.Size(m)
}
func (m *BadStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_BadStmt.DiscardUnknown(m)
}

var xxx_messageInfo_BadStmt proto.InternalMessageInfo

func (m *BadStmt) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *BadStmt) GetTo() int32 {
	if m != nil {
		return m.To
	}
	return 0
}

type DeclStmt struct {
	Decl                 *any.Any `protobuf:"bytes,1,opt,name=decl" json:"decl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeclStmt) Reset()         { *m = DeclStmt{} }
func (m *DeclStmt) String() string { return proto.CompactTextString(m) }
func (*DeclStmt) ProtoMessage()    {}
func (*DeclStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{27}
}
func (m *DeclStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeclStmt.Unmarshal(m, b)
}
func (m *DeclStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeclStmt.Marshal(b, m, deterministic)
}
func (dst *DeclStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeclStmt.Merge(dst, src)
}
func (m *DeclStmt) XXX_Size() int {
	return xxx_messageInfo_DeclStmt.Size(m)
}
func (m *DeclStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_DeclStmt.DiscardUnknown(m)
}

var xxx_messageInfo_DeclStmt proto.InternalMessageInfo

func (m *DeclStmt) GetDecl() *any.Any {
	if m != nil {
		return m.Decl
	}
	return nil
}

type EmptyStmt struct {
	Semicolon            int32    `protobuf:"varint,1,opt,name=semicolon" json:"semicolon,omitempty"`
	Implicit             bool     `protobuf:"varint,2,opt,name=implicit" json:"implicit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyStmt) Reset()         { *m = EmptyStmt{} }
func (m *EmptyStmt) String() string { return proto.CompactTextString(m) }
func (*EmptyStmt) ProtoMessage()    {}
func (*EmptyStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{28}
}
func (m *EmptyStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyStmt.Unmarshal(m, b)
}
func (m *EmptyStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyStmt.Marshal(b, m, deterministic)
}
func (dst *EmptyStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyStmt.Merge(dst, src)
}
func (m *EmptyStmt) XXX_Size() int {
	return xxx_messageInfo_EmptyStmt.Size(m)
}
func (m *EmptyStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyStmt.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyStmt proto.InternalMessageInfo

func (m *EmptyStmt) GetSemicolon() int32 {
	if m != nil {
		return m.Semicolon
	}
	return 0
}

func (m *EmptyStmt) GetImplicit() bool {
	if m != nil {
		return m.Implicit
	}
	return false
}

type LabeledStmt struct {
	Label                *Ident   `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Colon                int32    `protobuf:"varint,2,opt,name=colon" json:"colon,omitempty"`
	Stmt                 *any.Any `protobuf:"bytes,3,opt,name=stmt" json:"stmt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabeledStmt) Reset()         { *m = LabeledStmt{} }
func (m *LabeledStmt) String() string { return proto.CompactTextString(m) }
func (*LabeledStmt) ProtoMessage()    {}
func (*LabeledStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{29}
}
func (m *LabeledStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabeledStmt.Unmarshal(m, b)
}
func (m *LabeledStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabeledStmt.Marshal(b, m, deterministic)
}
func (dst *LabeledStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabeledStmt.Merge(dst, src)
}
func (m *LabeledStmt) XXX_Size() int {
	return xxx_messageInfo_LabeledStmt.Size(m)
}
func (m *LabeledStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_LabeledStmt.DiscardUnknown(m)
}

var xxx_messageInfo_LabeledStmt proto.InternalMessageInfo

func (m *LabeledStmt) GetLabel() *Ident {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *LabeledStmt) GetColon() int32 {
	if m != nil {
		return m.Colon
	}
	return 0
}

func (m *LabeledStmt) GetStmt() *any.Any {
	if m != nil {
		return m.Stmt
	}
	return nil
}

type ExprStmt struct {
	X                    *any.Any `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExprStmt) Reset()         { *m = ExprStmt{} }
func (m *ExprStmt) String() string { return proto.CompactTextString(m) }
func (*ExprStmt) ProtoMessage()    {}
func (*ExprStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{30}
}
func (m *ExprStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExprStmt.Unmarshal(m, b)
}
func (m *ExprStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExprStmt.Marshal(b, m, deterministic)
}
func (dst *ExprStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExprStmt.Merge(dst, src)
}
func (m *ExprStmt) XXX_Size() int {
	return xxx_messageInfo_ExprStmt.Size(m)
}
func (m *ExprStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_ExprStmt.DiscardUnknown(m)
}

var xxx_messageInfo_ExprStmt proto.InternalMessageInfo

func (m *ExprStmt) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

type SendStmt struct {
	Chan                 *any.Any `protobuf:"bytes,1,opt,name=chan" json:"chan,omitempty"`
	Arrow                int32    `protobuf:"varint,2,opt,name=arrow" json:"arrow,omitempty"`
	Value                *any.Any `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendStmt) Reset()         { *m = SendStmt{} }
func (m *SendStmt) String() string { return proto.CompactTextString(m) }
func (*SendStmt) ProtoMessage()    {}
func (*SendStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{31}
}
func (m *SendStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendStmt.Unmarshal(m, b)
}
func (m *SendStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendStmt.Marshal(b, m, deterministic)
}
func (dst *SendStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendStmt.Merge(dst, src)
}
func (m *SendStmt) XXX_Size() int {
	return xxx_messageInfo_SendStmt.Size(m)
}
func (m *SendStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_SendStmt.DiscardUnknown(m)
}

var xxx_messageInfo_SendStmt proto.InternalMessageInfo

func (m *SendStmt) GetChan() *any.Any {
	if m != nil {
		return m.Chan
	}
	return nil
}

func (m *SendStmt) GetArrow() int32 {
	if m != nil {
		return m.Arrow
	}
	return 0
}

func (m *SendStmt) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type IncDecStmt struct {
	X                    *any.Any `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	TokPos               int32    `protobuf:"varint,2,opt,name=tok_pos,json=tokPos" json:"tok_pos,omitempty"`
	Tok                  Token    `protobuf:"varint,3,opt,name=tok,enum=pb.Token" json:"tok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncDecStmt) Reset()         { *m = IncDecStmt{} }
func (m *IncDecStmt) String() string { return proto.CompactTextString(m) }
func (*IncDecStmt) ProtoMessage()    {}
func (*IncDecStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{32}
}
func (m *IncDecStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncDecStmt.Unmarshal(m, b)
}
func (m *IncDecStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncDecStmt.Marshal(b, m, deterministic)
}
func (dst *IncDecStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncDecStmt.Merge(dst, src)
}
func (m *IncDecStmt) XXX_Size() int {
	return xxx_messageInfo_IncDecStmt.Size(m)
}
func (m *IncDecStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_IncDecStmt.DiscardUnknown(m)
}

var xxx_messageInfo_IncDecStmt proto.InternalMessageInfo

func (m *IncDecStmt) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *IncDecStmt) GetTokPos() int32 {
	if m != nil {
		return m.TokPos
	}
	return 0
}

func (m *IncDecStmt) GetTok() Token {
	if m != nil {
		return m.Tok
	}
	return Token_ILLEGAL
}

type AssignStmt struct {
	Lhs                  []*any.Any `protobuf:"bytes,1,rep,name=lhs" json:"lhs,omitempty"`
	TokPos               int32      `protobuf:"varint,2,opt,name=tok_pos,json=tokPos" json:"tok_pos,omitempty"`
	Tok                  Token      `protobuf:"varint,3,opt,name=tok,enum=pb.Token" json:"tok,omitempty"`
	Rhs                  []*any.Any `protobuf:"bytes,4,rep,name=rhs" json:"rhs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AssignStmt) Reset()         { *m = AssignStmt{} }
func (m *AssignStmt) String() string { return proto.CompactTextString(m) }
func (*AssignStmt) ProtoMessage()    {}
func (*AssignStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{33}
}
func (m *AssignStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignStmt.Unmarshal(m, b)
}
func (m *AssignStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignStmt.Marshal(b, m, deterministic)
}
func (dst *AssignStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignStmt.Merge(dst, src)
}
func (m *AssignStmt) XXX_Size() int {
	return xxx_messageInfo_AssignStmt.Size(m)
}
func (m *AssignStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignStmt.DiscardUnknown(m)
}

var xxx_messageInfo_AssignStmt proto.InternalMessageInfo

func (m *AssignStmt) GetLhs() []*any.Any {
	if m != nil {
		return m.Lhs
	}
	return nil
}

func (m *AssignStmt) GetTokPos() int32 {
	if m != nil {
		return m.TokPos
	}
	return 0
}

func (m *AssignStmt) GetTok() Token {
	if m != nil {
		return m.Tok
	}
	return Token_ILLEGAL
}

func (m *AssignStmt) GetRhs() []*any.Any {
	if m != nil {
		return m.Rhs
	}
	return nil
}

type GoStmt struct {
	Go                   int32     `protobuf:"varint,1,opt,name=go" json:"go,omitempty"`
	Call                 *CallExpr `protobuf:"bytes,2,opt,name=call" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GoStmt) Reset()         { *m = GoStmt{} }
func (m *GoStmt) String() string { return proto.CompactTextString(m) }
func (*GoStmt) ProtoMessage()    {}
func (*GoStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{34}
}
func (m *GoStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoStmt.Unmarshal(m, b)
}
func (m *GoStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoStmt.Marshal(b, m, deterministic)
}
func (dst *GoStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoStmt.Merge(dst, src)
}
func (m *GoStmt) XXX_Size() int {
	return xxx_messageInfo_GoStmt.Size(m)
}
func (m *GoStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_GoStmt.DiscardUnknown(m)
}

var xxx_messageInfo_GoStmt proto.InternalMessageInfo

func (m *GoStmt) GetGo() int32 {
	if m != nil {
		return m.Go
	}
	return 0
}

func (m *GoStmt) GetCall() *CallExpr {
	if m != nil {
		return m.Call
	}
	return nil
}

type DeferStmt struct {
	Defer                int32     `protobuf:"varint,1,opt,name=defer" json:"defer,omitempty"`
	Call                 *CallExpr `protobuf:"bytes,2,opt,name=call" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeferStmt) Reset()         { *m = DeferStmt{} }
func (m *DeferStmt) String() string { return proto.CompactTextString(m) }
func (*DeferStmt) ProtoMessage()    {}
func (*DeferStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{35}
}
func (m *DeferStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeferStmt.Unmarshal(m, b)
}
func (m *DeferStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeferStmt.Marshal(b, m, deterministic)
}
func (dst *DeferStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeferStmt.Merge(dst, src)
}
func (m *DeferStmt) XXX_Size() int {
	return xxx_messageInfo_DeferStmt.Size(m)
}
func (m *DeferStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_DeferStmt.DiscardUnknown(m)
}

var xxx_messageInfo_DeferStmt proto.InternalMessageInfo

func (m *DeferStmt) GetDefer() int32 {
	if m != nil {
		return m.Defer
	}
	return 0
}

func (m *DeferStmt) GetCall() *CallExpr {
	if m != nil {
		return m.Call
	}
	return nil
}

type ReturnStmt struct {
	Return               int32      `protobuf:"varint,1,opt,name=return" json:"return,omitempty"`
	Results              []*any.Any `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReturnStmt) Reset()         { *m = ReturnStmt{} }
func (m *ReturnStmt) String() string { return proto.CompactTextString(m) }
func (*ReturnStmt) ProtoMessage()    {}
func (*ReturnStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{36}
}
func (m *ReturnStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnStmt.Unmarshal(m, b)
}
func (m *ReturnStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnStmt.Marshal(b, m, deterministic)
}
func (dst *ReturnStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnStmt.Merge(dst, src)
}
func (m *ReturnStmt) XXX_Size() int {
	return xxx_messageInfo_ReturnStmt.Size(m)
}
func (m *ReturnStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnStmt.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnStmt proto.InternalMessageInfo

func (m *ReturnStmt) GetReturn() int32 {
	if m != nil {
		return m.Return
	}
	return 0
}

func (m *ReturnStmt) GetResults() []*any.Any {
	if m != nil {
		return m.Results
	}
	return nil
}

type BranchStmt struct {
	TokPos               int32    `protobuf:"varint,1,opt,name=tok_pos,json=tokPos" json:"tok_pos,omitempty"`
	Tok                  Token    `protobuf:"varint,2,opt,name=tok,enum=pb.Token" json:"tok,omitempty"`
	Label                *Ident   `protobuf:"bytes,3,opt,name=label" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BranchStmt) Reset()         { *m = BranchStmt{} }
func (m *BranchStmt) String() string { return proto.CompactTextString(m) }
func (*BranchStmt) ProtoMessage()    {}
func (*BranchStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{37}
}
func (m *BranchStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BranchStmt.Unmarshal(m, b)
}
func (m *BranchStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BranchStmt.Marshal(b, m, deterministic)
}
func (dst *BranchStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BranchStmt.Merge(dst, src)
}
func (m *BranchStmt) XXX_Size() int {
	return xxx_messageInfo_BranchStmt.Size(m)
}
func (m *BranchStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_BranchStmt.DiscardUnknown(m)
}

var xxx_messageInfo_BranchStmt proto.InternalMessageInfo

func (m *BranchStmt) GetTokPos() int32 {
	if m != nil {
		return m.TokPos
	}
	return 0
}

func (m *BranchStmt) GetTok() Token {
	if m != nil {
		return m.Tok
	}
	return Token_ILLEGAL
}

func (m *BranchStmt) GetLabel() *Ident {
	if m != nil {
		return m.Label
	}
	return nil
}

type BlockStmt struct {
	Lbrace               int32      `protobuf:"varint,1,opt,name=lbrace" json:"lbrace,omitempty"`
	List                 []*any.Any `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	Rbrace               int32      `protobuf:"varint,3,opt,name=rbrace" json:"rbrace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BlockStmt) Reset()         { *m = BlockStmt{} }
func (m *BlockStmt) String() string { return proto.CompactTextString(m) }
func (*BlockStmt) ProtoMessage()    {}
func (*BlockStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{38}
}
func (m *BlockStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockStmt.Unmarshal(m, b)
}
func (m *BlockStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockStmt.Marshal(b, m, deterministic)
}
func (dst *BlockStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockStmt.Merge(dst, src)
}
func (m *BlockStmt) XXX_Size() int {
	return xxx_messageInfo_BlockStmt.Size(m)
}
func (m *BlockStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockStmt.DiscardUnknown(m)
}

var xxx_messageInfo_BlockStmt proto.InternalMessageInfo

func (m *BlockStmt) GetLbrace() int32 {
	if m != nil {
		return m.Lbrace
	}
	return 0
}

func (m *BlockStmt) GetList() []*any.Any {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *BlockStmt) GetRbrace() int32 {
	if m != nil {
		return m.Rbrace
	}
	return 0
}

type IfStmt struct {
	If                   int32      `protobuf:"varint,1,opt,name=if" json:"if,omitempty"`
	Init                 *any.Any   `protobuf:"bytes,2,opt,name=init" json:"init,omitempty"`
	Cond                 *any.Any   `protobuf:"bytes,3,opt,name=cond" json:"cond,omitempty"`
	Body                 *BlockStmt `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	Else                 *any.Any   `protobuf:"bytes,5,opt,name=else" json:"else,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *IfStmt) Reset()         { *m = IfStmt{} }
func (m *IfStmt) String() string { return proto.CompactTextString(m) }
func (*IfStmt) ProtoMessage()    {}
func (*IfStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{39}
}
func (m *IfStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfStmt.Unmarshal(m, b)
}
func (m *IfStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfStmt.Marshal(b, m, deterministic)
}
func (dst *IfStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfStmt.Merge(dst, src)
}
func (m *IfStmt) XXX_Size() int {
	return xxx_messageInfo_IfStmt.Size(m)
}
func (m *IfStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_IfStmt.DiscardUnknown(m)
}

var xxx_messageInfo_IfStmt proto.InternalMessageInfo

func (m *IfStmt) GetIf() int32 {
	if m != nil {
		return m.If
	}
	return 0
}

func (m *IfStmt) GetInit() *any.Any {
	if m != nil {
		return m.Init
	}
	return nil
}

func (m *IfStmt) GetCond() *any.Any {
	if m != nil {
		return m.Cond
	}
	return nil
}

func (m *IfStmt) GetBody() *BlockStmt {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *IfStmt) GetElse() *any.Any {
	if m != nil {
		return m.Else
	}
	return nil
}

type CaseClause struct {
	Case                 int32      `protobuf:"varint,1,opt,name=case" json:"case,omitempty"`
	List                 []*any.Any `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	Colon                int32      `protobuf:"varint,3,opt,name=colon" json:"colon,omitempty"`
	Body                 []*any.Any `protobuf:"bytes,4,rep,name=body" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CaseClause) Reset()         { *m = CaseClause{} }
func (m *CaseClause) String() string { return proto.CompactTextString(m) }
func (*CaseClause) ProtoMessage()    {}
func (*CaseClause) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{40}
}
func (m *CaseClause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaseClause.Unmarshal(m, b)
}
func (m *CaseClause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaseClause.Marshal(b, m, deterministic)
}
func (dst *CaseClause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaseClause.Merge(dst, src)
}
func (m *CaseClause) XXX_Size() int {
	return xxx_messageInfo_CaseClause.Size(m)
}
func (m *CaseClause) XXX_DiscardUnknown() {
	xxx_messageInfo_CaseClause.DiscardUnknown(m)
}

var xxx_messageInfo_CaseClause proto.InternalMessageInfo

func (m *CaseClause) GetCase() int32 {
	if m != nil {
		return m.Case
	}
	return 0
}

func (m *CaseClause) GetList() []*any.Any {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *CaseClause) GetColon() int32 {
	if m != nil {
		return m.Colon
	}
	return 0
}

func (m *CaseClause) GetBody() []*any.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

type SwitchStmt struct {
	Switch               int32      `protobuf:"varint,1,opt,name=switch" json:"switch,omitempty"`
	Init                 *any.Any   `protobuf:"bytes,2,opt,name=init" json:"init,omitempty"`
	Tag                  *any.Any   `protobuf:"bytes,3,opt,name=tag" json:"tag,omitempty"`
	Body                 *BlockStmt `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SwitchStmt) Reset()         { *m = SwitchStmt{} }
func (m *SwitchStmt) String() string { return proto.CompactTextString(m) }
func (*SwitchStmt) ProtoMessage()    {}
func (*SwitchStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{41}
}
func (m *SwitchStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchStmt.Unmarshal(m, b)
}
func (m *SwitchStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchStmt.Marshal(b, m, deterministic)
}
func (dst *SwitchStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchStmt.Merge(dst, src)
}
func (m *SwitchStmt) XXX_Size() int {
	return xxx_messageInfo_SwitchStmt.Size(m)
}
func (m *SwitchStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchStmt.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchStmt proto.InternalMessageInfo

func (m *SwitchStmt) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *SwitchStmt) GetInit() *any.Any {
	if m != nil {
		return m.Init
	}
	return nil
}

func (m *SwitchStmt) GetTag() *any.Any {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *SwitchStmt) GetBody() *BlockStmt {
	if m != nil {
		return m.Body
	}
	return nil
}

type TypeSwitchStmt struct {
	Switch               int32      `protobuf:"varint,1,opt,name=switch" json:"switch,omitempty"`
	Init                 *any.Any   `protobuf:"bytes,2,opt,name=init" json:"init,omitempty"`
	Assign               *any.Any   `protobuf:"bytes,3,opt,name=assign" json:"assign,omitempty"`
	Body                 *BlockStmt `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TypeSwitchStmt) Reset()         { *m = TypeSwitchStmt{} }
func (m *TypeSwitchStmt) String() string { return proto.CompactTextString(m) }
func (*TypeSwitchStmt) ProtoMessage()    {}
func (*TypeSwitchStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{42}
}
func (m *TypeSwitchStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeSwitchStmt.Unmarshal(m, b)
}
func (m *TypeSwitchStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeSwitchStmt.Marshal(b, m, deterministic)
}
func (dst *TypeSwitchStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeSwitchStmt.Merge(dst, src)
}
func (m *TypeSwitchStmt) XXX_Size() int {
	return xxx_messageInfo_TypeSwitchStmt.Size(m)
}
func (m *TypeSwitchStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeSwitchStmt.DiscardUnknown(m)
}

var xxx_messageInfo_TypeSwitchStmt proto.InternalMessageInfo

func (m *TypeSwitchStmt) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *TypeSwitchStmt) GetInit() *any.Any {
	if m != nil {
		return m.Init
	}
	return nil
}

func (m *TypeSwitchStmt) GetAssign() *any.Any {
	if m != nil {
		return m.Assign
	}
	return nil
}

func (m *TypeSwitchStmt) GetBody() *BlockStmt {
	if m != nil {
		return m.Body
	}
	return nil
}

type CommClause struct {
	Case                 int32      `protobuf:"varint,1,opt,name=case" json:"case,omitempty"`
	Comm                 *any.Any   `protobuf:"bytes,2,opt,name=comm" json:"comm,omitempty"`
	Colon                int32      `protobuf:"varint,3,opt,name=colon" json:"colon,omitempty"`
	Body                 []*any.Any `protobuf:"bytes,4,rep,name=body" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CommClause) Reset()         { *m = CommClause{} }
func (m *CommClause) String() string { return proto.CompactTextString(m) }
func (*CommClause) ProtoMessage()    {}
func (*CommClause) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{43}
}
func (m *CommClause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommClause.Unmarshal(m, b)
}
func (m *CommClause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommClause.Marshal(b, m, deterministic)
}
func (dst *CommClause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommClause.Merge(dst, src)
}
func (m *CommClause) XXX_Size() int {
	return xxx_messageInfo_CommClause.Size(m)
}
func (m *CommClause) XXX_DiscardUnknown() {
	xxx_messageInfo_CommClause.DiscardUnknown(m)
}

var xxx_messageInfo_CommClause proto.InternalMessageInfo

func (m *CommClause) GetCase() int32 {
	if m != nil {
		return m.Case
	}
	return 0
}

func (m *CommClause) GetComm() *any.Any {
	if m != nil {
		return m.Comm
	}
	return nil
}

func (m *CommClause) GetColon() int32 {
	if m != nil {
		return m.Colon
	}
	return 0
}

func (m *CommClause) GetBody() []*any.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

type SelectStmt struct {
	Select               int32      `protobuf:"varint,1,opt,name=select" json:"select,omitempty"`
	Body                 *BlockStmt `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SelectStmt) Reset()         { *m = SelectStmt{} }
func (m *SelectStmt) String() string { return proto.CompactTextString(m) }
func (*SelectStmt) ProtoMessage()    {}
func (*SelectStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{44}
}
func (m *SelectStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectStmt.Unmarshal(m, b)
}
func (m *SelectStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectStmt.Marshal(b, m, deterministic)
}
func (dst *SelectStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectStmt.Merge(dst, src)
}
func (m *SelectStmt) XXX_Size() int {
	return xxx_messageInfo_SelectStmt.Size(m)
}
func (m *SelectStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectStmt.DiscardUnknown(m)
}

var xxx_messageInfo_SelectStmt proto.InternalMessageInfo

func (m *SelectStmt) GetSelect() int32 {
	if m != nil {
		return m.Select
	}
	return 0
}

func (m *SelectStmt) GetBody() *BlockStmt {
	if m != nil {
		return m.Body
	}
	return nil
}

type ForStmt struct {
	For                  int32      `protobuf:"varint,1,opt,name=for" json:"for,omitempty"`
	Init                 *any.Any   `protobuf:"bytes,2,opt,name=init" json:"init,omitempty"`
	Cond                 *any.Any   `protobuf:"bytes,3,opt,name=cond" json:"cond,omitempty"`
	Post                 *any.Any   `protobuf:"bytes,4,opt,name=post" json:"post,omitempty"`
	Body                 *BlockStmt `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ForStmt) Reset()         { *m = ForStmt{} }
func (m *ForStmt) String() string { return proto.CompactTextString(m) }
func (*ForStmt) ProtoMessage()    {}
func (*ForStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{45}
}
func (m *ForStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForStmt.Unmarshal(m, b)
}
func (m *ForStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForStmt.Marshal(b, m, deterministic)
}
func (dst *ForStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForStmt.Merge(dst, src)
}
func (m *ForStmt) XXX_Size() int {
	return xxx_messageInfo_ForStmt.Size(m)
}
func (m *ForStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_ForStmt.DiscardUnknown(m)
}

var xxx_messageInfo_ForStmt proto.InternalMessageInfo

func (m *ForStmt) GetFor() int32 {
	if m != nil {
		return m.For
	}
	return 0
}

func (m *ForStmt) GetInit() *any.Any {
	if m != nil {
		return m.Init
	}
	return nil
}

func (m *ForStmt) GetCond() *any.Any {
	if m != nil {
		return m.Cond
	}
	return nil
}

func (m *ForStmt) GetPost() *any.Any {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *ForStmt) GetBody() *BlockStmt {
	if m != nil {
		return m.Body
	}
	return nil
}

type RangeStmt struct {
	For                  int32      `protobuf:"varint,1,opt,name=for" json:"for,omitempty"`
	Key                  *any.Any   `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value                *any.Any   `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	TokPos               int32      `protobuf:"varint,4,opt,name=tok_pos,json=tokPos" json:"tok_pos,omitempty"`
	Tok                  Token      `protobuf:"varint,5,opt,name=tok,enum=pb.Token" json:"tok,omitempty"`
	X                    *any.Any   `protobuf:"bytes,6,opt,name=x" json:"x,omitempty"`
	Body                 *BlockStmt `protobuf:"bytes,7,opt,name=body" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RangeStmt) Reset()         { *m = RangeStmt{} }
func (m *RangeStmt) String() string { return proto.CompactTextString(m) }
func (*RangeStmt) ProtoMessage()    {}
func (*RangeStmt) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{46}
}
func (m *RangeStmt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeStmt.Unmarshal(m, b)
}
func (m *RangeStmt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeStmt.Marshal(b, m, deterministic)
}
func (dst *RangeStmt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeStmt.Merge(dst, src)
}
func (m *RangeStmt) XXX_Size() int {
	return xxx_messageInfo_RangeStmt.Size(m)
}
func (m *RangeStmt) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeStmt.DiscardUnknown(m)
}

var xxx_messageInfo_RangeStmt proto.InternalMessageInfo

func (m *RangeStmt) GetFor() int32 {
	if m != nil {
		return m.For
	}
	return 0
}

func (m *RangeStmt) GetKey() *any.Any {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *RangeStmt) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RangeStmt) GetTokPos() int32 {
	if m != nil {
		return m.TokPos
	}
	return 0
}

func (m *RangeStmt) GetTok() Token {
	if m != nil {
		return m.Tok
	}
	return Token_ILLEGAL
}

func (m *RangeStmt) GetX() *any.Any {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *RangeStmt) GetBody() *BlockStmt {
	if m != nil {
		return m.Body
	}
	return nil
}

type ImportSpec struct {
	Doc                  *CommentGroup `protobuf:"bytes,1,opt,name=doc" json:"doc,omitempty"`
	Name                 *Ident        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Path                 *BasicLit     `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	Comment              *CommentGroup `protobuf:"bytes,4,opt,name=comment" json:"comment,omitempty"`
	EndPos               int32         `protobuf:"varint,5,opt,name=end_pos,json=endPos" json:"end_pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ImportSpec) Reset()         { *m = ImportSpec{} }
func (m *ImportSpec) String() string { return proto.CompactTextString(m) }
func (*ImportSpec) ProtoMessage()    {}
func (*ImportSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{47}
}
func (m *ImportSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportSpec.Unmarshal(m, b)
}
func (m *ImportSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportSpec.Marshal(b, m, deterministic)
}
func (dst *ImportSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportSpec.Merge(dst, src)
}
func (m *ImportSpec) XXX_Size() int {
	return xxx_messageInfo_ImportSpec.Size(m)
}
func (m *ImportSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ImportSpec proto.InternalMessageInfo

func (m *ImportSpec) GetDoc() *CommentGroup {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *ImportSpec) GetName() *Ident {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ImportSpec) GetPath() *BasicLit {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *ImportSpec) GetComment() *CommentGroup {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *ImportSpec) GetEndPos() int32 {
	if m != nil {
		return m.EndPos
	}
	return 0
}

type ValueSpec struct {
	Doc                  *CommentGroup `protobuf:"bytes,1,opt,name=doc" json:"doc,omitempty"`
	Names                []*Ident      `protobuf:"bytes,2,rep,name=names" json:"names,omitempty"`
	Type                 *any.Any      `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Values               []*any.Any    `protobuf:"bytes,4,rep,name=values" json:"values,omitempty"`
	Comment              *CommentGroup `protobuf:"bytes,5,opt,name=comment" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ValueSpec) Reset()         { *m = ValueSpec{} }
func (m *ValueSpec) String() string { return proto.CompactTextString(m) }
func (*ValueSpec) ProtoMessage()    {}
func (*ValueSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{48}
}
func (m *ValueSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSpec.Unmarshal(m, b)
}
func (m *ValueSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSpec.Marshal(b, m, deterministic)
}
func (dst *ValueSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSpec.Merge(dst, src)
}
func (m *ValueSpec) XXX_Size() int {
	return xxx_messageInfo_ValueSpec.Size(m)
}
func (m *ValueSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSpec proto.InternalMessageInfo

func (m *ValueSpec) GetDoc() *CommentGroup {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *ValueSpec) GetNames() []*Ident {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *ValueSpec) GetType() *any.Any {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ValueSpec) GetValues() []*any.Any {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *ValueSpec) GetComment() *CommentGroup {
	if m != nil {
		return m.Comment
	}
	return nil
}

type TypeSpec struct {
	Doc                  *CommentGroup `protobuf:"bytes,1,opt,name=doc" json:"doc,omitempty"`
	Name                 *Ident        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Assign               int32         `protobuf:"varint,3,opt,name=assign" json:"assign,omitempty"`
	Type                 *any.Any      `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	Comment              *CommentGroup `protobuf:"bytes,5,opt,name=comment" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TypeSpec) Reset()         { *m = TypeSpec{} }
func (m *TypeSpec) String() string { return proto.CompactTextString(m) }
func (*TypeSpec) ProtoMessage()    {}
func (*TypeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{49}
}
func (m *TypeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeSpec.Unmarshal(m, b)
}
func (m *TypeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeSpec.Marshal(b, m, deterministic)
}
func (dst *TypeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeSpec.Merge(dst, src)
}
func (m *TypeSpec) XXX_Size() int {
	return xxx_messageInfo_TypeSpec.Size(m)
}
func (m *TypeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_TypeSpec proto.InternalMessageInfo

func (m *TypeSpec) GetDoc() *CommentGroup {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *TypeSpec) GetName() *Ident {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TypeSpec) GetAssign() int32 {
	if m != nil {
		return m.Assign
	}
	return 0
}

func (m *TypeSpec) GetType() *any.Any {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *TypeSpec) GetComment() *CommentGroup {
	if m != nil {
		return m.Comment
	}
	return nil
}

type BadDecl struct {
	From                 int32    `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	To                   int32    `protobuf:"varint,2,opt,name=to" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BadDecl) Reset()         { *m = BadDecl{} }
func (m *BadDecl) String() string { return proto.CompactTextString(m) }
func (*BadDecl) ProtoMessage()    {}
func (*BadDecl) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{50}
}
func (m *BadDecl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BadDecl.Unmarshal(m, b)
}
func (m *BadDecl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BadDecl.Marshal(b, m, deterministic)
}
func (dst *BadDecl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BadDecl.Merge(dst, src)
}
func (m *BadDecl) XXX_Size() int {
	return xxx_messageInfo_BadDecl.Size(m)
}
func (m *BadDecl) XXX_DiscardUnknown() {
	xxx_messageInfo_BadDecl.DiscardUnknown(m)
}

var xxx_messageInfo_BadDecl proto.InternalMessageInfo

func (m *BadDecl) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *BadDecl) GetTo() int32 {
	if m != nil {
		return m.To
	}
	return 0
}

type GenDecl struct {
	Doc                  *CommentGroup `protobuf:"bytes,1,opt,name=doc" json:"doc,omitempty"`
	TokPos               int32         `protobuf:"varint,2,opt,name=tok_pos,json=tokPos" json:"tok_pos,omitempty"`
	Tok                  Token         `protobuf:"varint,3,opt,name=tok,enum=pb.Token" json:"tok,omitempty"`
	Lparen               int32         `protobuf:"varint,4,opt,name=lparen" json:"lparen,omitempty"`
	Specs                []*any.Any    `protobuf:"bytes,5,rep,name=specs" json:"specs,omitempty"`
	Rparen               int32         `protobuf:"varint,6,opt,name=rparen" json:"rparen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GenDecl) Reset()         { *m = GenDecl{} }
func (m *GenDecl) String() string { return proto.CompactTextString(m) }
func (*GenDecl) ProtoMessage()    {}
func (*GenDecl) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{51}
}
func (m *GenDecl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenDecl.Unmarshal(m, b)
}
func (m *GenDecl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenDecl.Marshal(b, m, deterministic)
}
func (dst *GenDecl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenDecl.Merge(dst, src)
}
func (m *GenDecl) XXX_Size() int {
	return xxx_messageInfo_GenDecl.Size(m)
}
func (m *GenDecl) XXX_DiscardUnknown() {
	xxx_messageInfo_GenDecl.DiscardUnknown(m)
}

var xxx_messageInfo_GenDecl proto.InternalMessageInfo

func (m *GenDecl) GetDoc() *CommentGroup {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *GenDecl) GetTokPos() int32 {
	if m != nil {
		return m.TokPos
	}
	return 0
}

func (m *GenDecl) GetTok() Token {
	if m != nil {
		return m.Tok
	}
	return Token_ILLEGAL
}

func (m *GenDecl) GetLparen() int32 {
	if m != nil {
		return m.Lparen
	}
	return 0
}

func (m *GenDecl) GetSpecs() []*any.Any {
	if m != nil {
		return m.Specs
	}
	return nil
}

func (m *GenDecl) GetRparen() int32 {
	if m != nil {
		return m.Rparen
	}
	return 0
}

type FuncDecl struct {
	Doc                  *CommentGroup `protobuf:"bytes,1,opt,name=doc" json:"doc,omitempty"`
	Recv                 *FieldList    `protobuf:"bytes,2,opt,name=recv" json:"recv,omitempty"`
	Name                 *Ident        `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Type                 *FuncType     `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	Body                 *BlockStmt    `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FuncDecl) Reset()         { *m = FuncDecl{} }
func (m *FuncDecl) String() string { return proto.CompactTextString(m) }
func (*FuncDecl) ProtoMessage()    {}
func (*FuncDecl) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{52}
}
func (m *FuncDecl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FuncDecl.Unmarshal(m, b)
}
func (m *FuncDecl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FuncDecl.Marshal(b, m, deterministic)
}
func (dst *FuncDecl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuncDecl.Merge(dst, src)
}
func (m *FuncDecl) XXX_Size() int {
	return xxx_messageInfo_FuncDecl.Size(m)
}
func (m *FuncDecl) XXX_DiscardUnknown() {
	xxx_messageInfo_FuncDecl.DiscardUnknown(m)
}

var xxx_messageInfo_FuncDecl proto.InternalMessageInfo

func (m *FuncDecl) GetDoc() *CommentGroup {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *FuncDecl) GetRecv() *FieldList {
	if m != nil {
		return m.Recv
	}
	return nil
}

func (m *FuncDecl) GetName() *Ident {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *FuncDecl) GetType() *FuncType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *FuncDecl) GetBody() *BlockStmt {
	if m != nil {
		return m.Body
	}
	return nil
}

type File struct {
	FileName             string          `protobuf:"bytes,1,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	Doc                  *CommentGroup   `protobuf:"bytes,2,opt,name=doc" json:"doc,omitempty"`
	Package              int32           `protobuf:"varint,3,opt,name=package" json:"package,omitempty"`
	Name                 *Ident          `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Decls                []*any.Any      `protobuf:"bytes,5,rep,name=decls" json:"decls,omitempty"`
	Imports              []*ImportSpec   `protobuf:"bytes,6,rep,name=imports" json:"imports,omitempty"`
	Unresolved           []*Ident        `protobuf:"bytes,7,rep,name=unresolved" json:"unresolved,omitempty"`
	Comments             []*CommentGroup `protobuf:"bytes,8,rep,name=comments" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{53}
}
func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (dst *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(dst, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *File) GetDoc() *CommentGroup {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *File) GetPackage() int32 {
	if m != nil {
		return m.Package
	}
	return 0
}

func (m *File) GetName() *Ident {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *File) GetDecls() []*any.Any {
	if m != nil {
		return m.Decls
	}
	return nil
}

func (m *File) GetImports() []*ImportSpec {
	if m != nil {
		return m.Imports
	}
	return nil
}

func (m *File) GetUnresolved() []*Ident {
	if m != nil {
		return m.Unresolved
	}
	return nil
}

func (m *File) GetComments() []*CommentGroup {
	if m != nil {
		return m.Comments
	}
	return nil
}

type Package struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Files                []*File  `protobuf:"bytes,3,rep,name=files" json:"files,omitempty"`
	VarInitOrder         []string `protobuf:"bytes,4,rep,name=var_init_order,json=varInitOrder" json:"var_init_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{54}
}
func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (dst *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(dst, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

func (m *Package) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Package) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Package) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Package) GetVarInitOrder() []string {
	if m != nil {
		return m.VarInitOrder
	}
	return nil
}

type Packages struct {
	Packages             []*Package `protobuf:"bytes,1,rep,name=packages" json:"packages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Packages) Reset()         { *m = Packages{} }
func (m *Packages) String() string { return proto.CompactTextString(m) }
func (*Packages) ProtoMessage()    {}
func (*Packages) Descriptor() ([]byte, []int) {
	return fileDescriptor_ast_dda2bfdbb2dde0fa, []int{55}
}
func (m *Packages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packages.Unmarshal(m, b)
}
func (m *Packages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packages.Marshal(b, m, deterministic)
}
func (dst *Packages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packages.Merge(dst, src)
}
func (m *Packages) XXX_Size() int {
	return xxx_messageInfo_Packages.Size(m)
}
func (m *Packages) XXX_DiscardUnknown() {
	xxx_messageInfo_Packages.DiscardUnknown(m)
}

var xxx_messageInfo_Packages proto.InternalMessageInfo

func (m *Packages) GetPackages() []*Package {
	if m != nil {
		return m.Packages
	}
	return nil
}

func init() {
	proto.RegisterType((*Comment)(nil), "pb.Comment")
	proto.RegisterType((*CommentGroup)(nil), "pb.CommentGroup")
	proto.RegisterType((*Field)(nil), "pb.Field")
	proto.RegisterType((*FieldList)(nil), "pb.FieldList")
	proto.RegisterType((*BadExpr)(nil), "pb.BadExpr")
	proto.RegisterType((*Ident)(nil), "pb.Ident")
	proto.RegisterType((*Ellipsis)(nil), "pb.Ellipsis")
	proto.RegisterType((*BasicLit)(nil), "pb.BasicLit")
	proto.RegisterType((*FuncLit)(nil), "pb.FuncLit")
	proto.RegisterType((*CompositeLit)(nil), "pb.CompositeLit")
	proto.RegisterType((*ParenExpr)(nil), "pb.ParenExpr")
	proto.RegisterType((*SelectorExpr)(nil), "pb.SelectorExpr")
	proto.RegisterType((*IndexExpr)(nil), "pb.IndexExpr")
	proto.RegisterType((*SliceExpr)(nil), "pb.SliceExpr")
	proto.RegisterType((*TypeAssertExpr)(nil), "pb.TypeAssertExpr")
	proto.RegisterType((*CallExpr)(nil), "pb.CallExpr")
	proto.RegisterType((*StarExpr)(nil), "pb.StarExpr")
	proto.RegisterType((*UnaryExpr)(nil), "pb.UnaryExpr")
	proto.RegisterType((*BinaryExpr)(nil), "pb.BinaryExpr")
	proto.RegisterType((*KeyValueExpr)(nil), "pb.KeyValueExpr")
	proto.RegisterType((*ArrayType)(nil), "pb.ArrayType")
	proto.RegisterType((*StructType)(nil), "pb.StructType")
	proto.RegisterType((*FuncType)(nil), "pb.FuncType")
	proto.RegisterType((*InterfaceType)(nil), "pb.InterfaceType")
	proto.RegisterType((*MapType)(nil), "pb.MapType")
	proto.RegisterType((*ChanType)(nil), "pb.ChanType")
	proto.RegisterType((*BadStmt)(nil), "pb.BadStmt")
	proto.RegisterType((*DeclStmt)(nil), "pb.DeclStmt")
	proto.RegisterType((*EmptyStmt)(nil), "pb.EmptyStmt")
	proto.RegisterType((*LabeledStmt)(nil), "pb.LabeledStmt")
	proto.RegisterType((*ExprStmt)(nil), "pb.ExprStmt")
	proto.RegisterType((*SendStmt)(nil), "pb.SendStmt")
	proto.RegisterType((*IncDecStmt)(nil), "pb.IncDecStmt")
	proto.RegisterType((*AssignStmt)(nil), "pb.AssignStmt")
	proto.RegisterType((*GoStmt)(nil), "pb.GoStmt")
	proto.RegisterType((*DeferStmt)(nil), "pb.DeferStmt")
	proto.RegisterType((*ReturnStmt)(nil), "pb.ReturnStmt")
	proto.RegisterType((*BranchStmt)(nil), "pb.BranchStmt")
	proto.RegisterType((*BlockStmt)(nil), "pb.BlockStmt")
	proto.RegisterType((*IfStmt)(nil), "pb.IfStmt")
	proto.RegisterType((*CaseClause)(nil), "pb.CaseClause")
	proto.RegisterType((*SwitchStmt)(nil), "pb.SwitchStmt")
	proto.RegisterType((*TypeSwitchStmt)(nil), "pb.TypeSwitchStmt")
	proto.RegisterType((*CommClause)(nil), "pb.CommClause")
	proto.RegisterType((*SelectStmt)(nil), "pb.SelectStmt")
	proto.RegisterType((*ForStmt)(nil), "pb.ForStmt")
	proto.RegisterType((*RangeStmt)(nil), "pb.RangeStmt")
	proto.RegisterType((*ImportSpec)(nil), "pb.ImportSpec")
	proto.RegisterType((*ValueSpec)(nil), "pb.ValueSpec")
	proto.RegisterType((*TypeSpec)(nil), "pb.TypeSpec")
	proto.RegisterType((*BadDecl)(nil), "pb.BadDecl")
	proto.RegisterType((*GenDecl)(nil), "pb.GenDecl")
	proto.RegisterType((*FuncDecl)(nil), "pb.FuncDecl")
	proto.RegisterType((*File)(nil), "pb.File")
	proto.RegisterType((*Package)(nil), "pb.Package")
	proto.RegisterType((*Packages)(nil), "pb.Packages")
}

func init() { proto.RegisterFile("ast.proto", fileDescriptor_ast_dda2bfdbb2dde0fa) }

var fileDescriptor_ast_dda2bfdbb2dde0fa = []byte{
	// 2097 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0xdd, 0x8e, 0xdc, 0x48,
	0xf5, 0x97, 0xdb, 0x76, 0xb7, 0x7d, 0x26, 0x19, 0x45, 0x56, 0xfe, 0xfb, 0xef, 0x24, 0x9b, 0x64,
	0xd6, 0x82, 0x6c, 0x6f, 0x14, 0x26, 0x68, 0xc3, 0x15, 0x77, 0xf9, 0xd6, 0x88, 0x00, 0x91, 0x27,
	0x20, 0xae, 0x18, 0xd5, 0xb8, 0xab, 0xbb, 0xad, 0xb6, 0x5d, 0x96, 0xcb, 0x3d, 0x99, 0xe6, 0x05,
	0x90, 0x10, 0x57, 0x20, 0x21, 0x81, 0x10, 0x12, 0xe2, 0x01, 0x10, 0x17, 0xac, 0x84, 0x00, 0x21,
	0xc1, 0x23, 0xc0, 0x73, 0xf0, 0x0c, 0xe8, 0x9c, 0xaa, 0x72, 0xbb, 0x93, 0xb1, 0xd3, 0xde, 0x4d,
	0xee, 0x7c, 0xaa, 0x8e, 0xab, 0x7e, 0xe7, 0xfb, 0x54, 0x15, 0xf8, 0x4c, 0x56, 0x87, 0x45, 0x29,
	0x2a, 0x11, 0x0c, 0x8a, 0xd3, 0xeb, 0x7b, 0x95, 0x58, 0xf2, 0x5c, 0x0d, 0x5c, 0x87, 0x6a, 0x5d,
	0x70, 0xfd, 0x7d, 0x6d, 0x2e, 0xc4, 0x3c, 0xe5, 0xf7, 0x89, 0x3a, 0x5d, 0xcd, 0xee, 0xb3, 0x7c,
	0xad, 0xa6, 0xc2, 0x07, 0x30, 0x7a, 0x2c, 0xb2, 0x8c, 0xe7, 0x55, 0x70, 0x15, 0x5c, 0x99, 0x32,
	0xb9, 0x18, 0x5b, 0x07, 0xd6, 0xc4, 0x8d, 0x14, 0x11, 0x04, 0xe0, 0x54, 0xfc, 0xbc, 0x1a, 0x0f,
	0x0e, 0xac, 0x89, 0x1f, 0xd1, 0x77, 0x78, 0x1f, 0x2e, 0xe9, 0x9f, 0x9e, 0x97, 0x62, 0x55, 0x04,
	0xb7, 0xc1, 0x49, 0x13, 0x59, 0x8d, 0xad, 0x03, 0x7b, 0xb2, 0xf7, 0xf9, 0xde, 0x61, 0x71, 0x7a,
	0xa8, 0xe7, 0x23, 0x9a, 0x08, 0xff, 0x69, 0x81, 0xfb, 0x2c, 0xe1, 0xe9, 0x34, 0x08, 0xc1, 0x9e,
	0x8a, 0x98, 0xb6, 0xd8, 0xfb, 0xfc, 0x4a, 0x83, 0x93, 0x56, 0x8a, 0x70, 0x32, 0xb8, 0x0d, 0x6e,
	0xce, 0x32, 0x2e, 0xc7, 0x03, 0x5a, 0xcf, 0x47, 0xae, 0xa3, 0x29, 0xae, 0xa6, 0xc6, 0x83, 0x09,
	0x38, 0x28, 0xdd, 0xd8, 0xa6, 0x55, 0xae, 0x1e, 0x2a, 0xf1, 0x0e, 0x8d, 0x78, 0x87, 0x0f, 0xf3,
	0x75, 0x44, 0x1c, 0xc1, 0x2d, 0xb0, 0x2b, 0x36, 0x1f, 0x3b, 0xc4, 0x78, 0x09, 0x17, 0x7a, 0xc4,
	0x64, 0x12, 0xbf, 0x48, 0xaa, 0x08, 0x27, 0x82, 0xbb, 0x30, 0x8a, 0xd5, 0xfe, 0x63, 0xb7, 0x05,
	0x92, 0x61, 0x08, 0x7f, 0x0c, 0x3e, 0xc9, 0xf0, 0x22, 0x91, 0x55, 0x30, 0x86, 0x91, 0x28, 0x78,
	0x9e, 0xe4, 0x73, 0xad, 0x2e, 0x43, 0x06, 0x37, 0xb5, 0x32, 0x1a, 0xe0, 0xe9, 0x37, 0xa5, 0x0a,
	0xfc, 0x31, 0x4e, 0x85, 0xc4, 0x1f, 0x6d, 0xf5, 0xa3, 0x26, 0xc3, 0x1f, 0xc1, 0xe8, 0x11, 0x9b,
	0x3e, 0x3d, 0x2f, 0x4a, 0x54, 0xfa, 0xac, 0x14, 0x99, 0x5e, 0x9a, 0xbe, 0x83, 0x7d, 0x18, 0x54,
	0x82, 0xcc, 0xe0, 0x46, 0x83, 0x4a, 0x04, 0x9f, 0x81, 0x8f, 0x22, 0x9e, 0x24, 0xf9, 0x4c, 0x68,
	0x4d, 0x90, 0x80, 0xaf, 0xd6, 0x05, 0x3f, 0xca, 0x67, 0x22, 0xf2, 0x2a, 0xfd, 0x15, 0xfe, 0xd2,
	0x02, 0x97, 0x14, 0x18, 0x5c, 0x03, 0x0f, 0x55, 0x78, 0x52, 0x08, 0x69, 0x70, 0x23, 0xfd, 0x52,
	0x48, 0xdc, 0x13, 0x3f, 0x8d, 0xa1, 0xf1, 0xbb, 0xc7, 0x1e, 0xc1, 0x37, 0xe1, 0xf2, 0x94, 0xcf,
	0x4e, 0x36, 0xec, 0xce, 0x05, 0xec, 0x7b, 0x53, 0x3e, 0x33, 0x44, 0xb8, 0x06, 0xef, 0x69, 0x9a,
	0x26, 0x85, 0x4c, 0x64, 0x70, 0x1d, 0x3c, 0xae, 0xbf, 0x35, 0xae, 0x9a, 0x0e, 0xee, 0x80, 0xcd,
	0x53, 0xe5, 0x80, 0x6d, 0xc6, 0x46, 0x86, 0x3e, 0x0a, 0xf9, 0xa9, 0x05, 0x9e, 0x71, 0x84, 0xe0,
	0x06, 0xf8, 0x67, 0x2c, 0x5d, 0x35, 0x95, 0xe2, 0xd1, 0x00, 0x6a, 0xe5, 0x26, 0x38, 0xcb, 0x24,
	0x9f, 0xd2, 0xee, 0xfb, 0xca, 0x9a, 0xaf, 0x30, 0xca, 0x22, 0x1a, 0xc6, 0x98, 0x21, 0x56, 0xda,
	0xcf, 0x8f, 0x14, 0xb1, 0x8d, 0xc4, 0xe9, 0x44, 0xb2, 0x86, 0xd1, 0xb3, 0x55, 0x4e, 0x38, 0x0e,
	0xb4, 0x57, 0x5b, 0x9b, 0x1f, 0x70, 0x0a, 0x7f, 0xd2, 0xde, 0xfc, 0x09, 0x38, 0xa7, 0x62, 0xba,
	0xd6, 0xaa, 0xb8, 0x4c, 0xee, 0x9c, 0x8a, 0x78, 0x79, 0x5c, 0x65, 0x55, 0x44, 0x53, 0x7d, 0x94,
	0xf0, 0x77, 0x8b, 0xc2, 0xb8, 0x10, 0x32, 0xa9, 0x38, 0x02, 0x98, 0x6c, 0x01, 0xe8, 0x0a, 0xab,
	0x8f, 0x60, 0x98, 0x9e, 0x96, 0x2c, 0xe6, 0xda, 0x1f, 0x35, 0x85, 0x2b, 0xf0, 0xb4, 0x92, 0x63,
	0x9b, 0x7c, 0xbf, 0x65, 0x05, 0xe4, 0xc0, 0x15, 0x4a, 0xb5, 0x82, 0xa3, 0x56, 0x50, 0xd4, 0x36,
	0x7e, 0xb7, 0x13, 0xff, 0xcf, 0x2c, 0xf0, 0x5f, 0xb2, 0x92, 0xe7, 0x14, 0x32, 0x08, 0xa9, 0x40,
	0x4a, 0x9b, 0x50, 0x53, 0x41, 0x08, 0xd6, 0x79, 0xa7, 0xef, 0x58, 0xe7, 0x04, 0x46, 0xfd, 0x6b,
	0x6b, 0x30, 0xea, 0xdf, 0x1e, 0x76, 0xfc, 0x09, 0x5c, 0x3a, 0xe6, 0x29, 0x8f, 0x2b, 0x51, 0x12,
	0x1c, 0xda, 0xd6, 0xea, 0xde, 0xf6, 0x06, 0xd8, 0x92, 0xa7, 0x1a, 0x5c, 0x23, 0xcb, 0xe1, 0x68,
	0x1f, 0x43, 0x7e, 0x61, 0x81, 0x7f, 0x94, 0x4f, 0xf9, 0xf9, 0xce, 0x3b, 0x1b, 0xfb, 0x2d, 0xb7,
	0xec, 0xb7, 0x0c, 0xee, 0x82, 0x9b, 0xe0, 0x42, 0x9d, 0x99, 0x55, 0xb1, 0xd4, 0x16, 0x5c, 0x6e,
	0x59, 0x70, 0xd9, 0xc7, 0x82, 0xbf, 0x1d, 0x80, 0x7f, 0x9c, 0x26, 0x31, 0xff, 0xca, 0xc0, 0xef,
	0x80, 0x9d, 0x8a, 0xd7, 0x9d, 0xb0, 0x91, 0x01, 0x1d, 0x74, 0x91, 0xcc, 0x17, 0xda, 0x98, 0x2d,
	0x0e, 0x8a, 0x1c, 0xb8, 0x62, 0xc6, 0xce, 0xb5, 0x00, 0x2d, 0x2b, 0x66, 0x8c, 0x10, 0x49, 0x14,
	0xe1, 0xc1, 0x78, 0x78, 0x60, 0x4d, 0xbc, 0x48, 0x53, 0x0d, 0xf5, 0x8c, 0xda, 0xd5, 0xe3, 0x75,
	0xaa, 0xe7, 0x2f, 0x16, 0xec, 0xe3, 0xf0, 0x43, 0x29, 0x79, 0x59, 0xf5, 0xd2, 0x91, 0xf2, 0xe6,
	0xc1, 0x56, 0x24, 0xec, 0x5e, 0x35, 0x37, 0xf1, 0xe0, 0xb4, 0xc7, 0x43, 0xb7, 0x69, 0xff, 0x6d,
	0x81, 0xf7, 0x98, 0xa5, 0x29, 0xa1, 0xbe, 0x03, 0xf6, 0x6c, 0x95, 0x77, 0xe2, 0x46, 0x86, 0x2e,
	0xe4, 0xac, 0x9c, 0xbf, 0x23, 0xad, 0x20, 0xc7, 0x56, 0x1d, 0x71, 0xde, 0xa8, 0x23, 0x1b, 0xa9,
	0xdc, 0x76, 0xa9, 0x86, 0x9d, 0x52, 0x65, 0xe0, 0x1d, 0x57, 0xac, 0x34, 0x35, 0x5a, 0x56, 0xac,
	0x34, 0x35, 0x1a, 0xbf, 0x77, 0x4a, 0x36, 0x3d, 0x02, 0xfb, 0xe7, 0x16, 0xf8, 0x3f, 0xc8, 0x59,
	0xb9, 0xa6, 0x0d, 0xff, 0x0f, 0x86, 0xa2, 0x68, 0x14, 0x29, 0x57, 0x14, 0x58, 0xa1, 0xae, 0xc1,
	0x40, 0x14, 0x6f, 0xd7, 0xa7, 0x81, 0x28, 0x14, 0x1c, 0xbb, 0x07, 0x9c, 0xee, 0x1c, 0xf7, 0x27,
	0x0b, 0xe0, 0x51, 0x52, 0xe3, 0xd9, 0xc5, 0x17, 0x37, 0x98, 0x07, 0x6f, 0x63, 0xb6, 0x5b, 0x30,
	0xaf, 0x3b, 0xc3, 0xd3, 0x5a, 0xf7, 0xf1, 0xc3, 0x3f, 0x58, 0x70, 0xe9, 0x3b, 0x7c, 0xfd, 0x43,
	0xac, 0xcb, 0xc6, 0x17, 0x97, 0x7c, 0xdd, 0xed, 0x8b, 0x4b, 0xbe, 0xc6, 0xca, 0x1e, 0x8b, 0x54,
	0x18, 0x57, 0x54, 0x04, 0x26, 0xc8, 0x4d, 0xbd, 0x6f, 0x4d, 0x90, 0xbd, 0xbb, 0x80, 0xdf, 0x59,
	0xe0, 0x3f, 0x2c, 0x4b, 0xb6, 0x7e, 0xd5, 0xac, 0xae, 0xcb, 0xba, 0x94, 0x6d, 0x92, 0x9c, 0x8e,
	0x8d, 0xf6, 0x24, 0xc7, 0x73, 0xd3, 0x30, 0xd9, 0xbd, 0x1a, 0xa6, 0x6e, 0x80, 0xbf, 0xb2, 0x00,
	0x8e, 0xab, 0x72, 0x15, 0x57, 0x06, 0xa1, 0x24, 0xca, 0x20, 0x54, 0x54, 0xf0, 0x75, 0x18, 0xce,
	0xb0, 0xd7, 0x95, 0xcd, 0x16, 0xa5, 0x6e, 0x9a, 0x23, 0x3d, 0x19, 0xdc, 0x02, 0x48, 0xf2, 0x58,
	0x64, 0x45, 0xca, 0x2b, 0xa5, 0x4a, 0x2f, 0x6a, 0x8c, 0xf4, 0x01, 0xf6, 0x6b, 0x0b, 0x3c, 0xd3,
	0x25, 0x51, 0xdb, 0xbc, 0xca, 0xe3, 0xba, 0x6d, 0x5e, 0xe5, 0x31, 0x42, 0x2a, 0x58, 0xc9, 0xb2,
	0x36, 0x48, 0x6a, 0x32, 0xf8, 0x14, 0x46, 0x25, 0x97, 0x2b, 0xd5, 0xbc, 0x5c, 0xc0, 0x67, 0x66,
	0xfb, 0x60, 0xfb, 0xbd, 0x05, 0x97, 0x8f, 0xf2, 0x8a, 0x97, 0x33, 0x16, 0x73, 0x02, 0xf8, 0x31,
	0xf8, 0x89, 0x19, 0xd0, 0x28, 0x37, 0x03, 0x88, 0x21, 0xe3, 0xd5, 0x42, 0xb4, 0xa9, 0xcf, 0xcc,
	0xbe, 0x4f, 0xfd, 0xfd, 0xc6, 0x82, 0xd1, 0x77, 0x59, 0x41, 0xe8, 0xae, 0x60, 0xc9, 0x2b, 0x34,
	0x2e, 0xfc, 0x34, 0xc1, 0x32, 0x78, 0x57, 0xb0, 0x7c, 0xa0, 0xb0, 0xf8, 0x17, 0x16, 0x91, 0x05,
	0xcb, 0x09, 0xdd, 0x55, 0x70, 0x4f, 0xf9, 0x3c, 0x31, 0xfd, 0x9d, 0x22, 0x70, 0x94, 0x95, 0xa5,
	0x78, 0x6d, 0xc2, 0x94, 0x08, 0x3c, 0xe6, 0x48, 0x9e, 0x4f, 0x4f, 0xa6, 0x49, 0xa9, 0xd5, 0x33,
	0x42, 0xfa, 0x49, 0x52, 0xe2, 0x54, 0xc9, 0xe3, 0x33, 0x9a, 0x72, 0xd4, 0x14, 0xd2, 0x38, 0x55,
	0x4b, 0xe1, 0xf6, 0x94, 0xa2, 0xbb, 0x68, 0x7c, 0x83, 0xce, 0x75, 0xd8, 0xa3, 0xef, 0x72, 0xae,
	0x0b, 0xbf, 0x05, 0xde, 0x13, 0x1e, 0xa7, 0xc4, 0x3f, 0x01, 0x67, 0xca, 0xe3, 0xb4, 0xbb, 0x23,
	0x47, 0x8e, 0xf0, 0x29, 0xf8, 0x4f, 0xb3, 0xa2, 0x5a, 0xd3, 0x6f, 0x1f, 0x83, 0x2f, 0x79, 0x96,
	0xa8, 0xfc, 0xa5, 0xdd, 0xac, 0x1e, 0xc0, 0x1a, 0x99, 0x64, 0x45, 0x9a, 0xc4, 0x89, 0x3a, 0x54,
	0x79, 0x51, 0x4d, 0x87, 0x39, 0xec, 0xbd, 0x60, 0xa7, 0x3c, 0xe5, 0x0a, 0xef, 0x6d, 0x70, 0x53,
	0x24, 0x35, 0x80, 0xe6, 0x49, 0x9c, 0xc6, 0x5b, 0xb2, 0xe4, 0x04, 0x4b, 0x63, 0xd6, 0x9d, 0x81,
	0x88, 0x23, 0x3c, 0x04, 0x0f, 0xb3, 0x32, 0x6d, 0xb6, 0x43, 0x3d, 0x09, 0xcf, 0xc0, 0x3b, 0xe6,
	0xf9, 0xd4, 0x28, 0x27, 0x5e, 0xb0, 0xee, 0xb6, 0x82, 0x38, 0x5a, 0x9c, 0xa4, 0x87, 0xd3, 0x86,
	0x33, 0x80, 0xa3, 0x3c, 0x7e, 0xc2, 0xe3, 0x5d, 0x91, 0x06, 0xff, 0x0f, 0xa3, 0x4a, 0x2c, 0x1b,
	0xa5, 0x6f, 0x58, 0x89, 0x25, 0xd6, 0xbe, 0x1b, 0x60, 0x57, 0x62, 0xf9, 0x76, 0xf1, 0xc3, 0xd1,
	0xf0, 0x17, 0x16, 0xc0, 0x43, 0x29, 0x93, 0x79, 0x4e, 0x1b, 0x61, 0xc6, 0x5f, 0x48, 0x7d, 0xaf,
	0xd2, 0x96, 0xf1, 0x17, 0xf2, 0xcb, 0x6d, 0x86, 0xab, 0x97, 0x0b, 0xec, 0x93, 0x3a, 0x56, 0x2f,
	0x17, 0x32, 0xfc, 0x36, 0x0c, 0x9f, 0x0b, 0xc2, 0xb3, 0x0f, 0x83, 0xb9, 0xd0, 0x1e, 0x35, 0x98,
	0x0b, 0x3c, 0xb2, 0xc6, 0x2c, 0x35, 0x47, 0x18, 0x0a, 0x00, 0xd3, 0xf4, 0x45, 0x34, 0x13, 0x3e,
	0x06, 0xff, 0x09, 0x9f, 0x71, 0x65, 0xe1, 0xab, 0xe0, 0x4e, 0x91, 0x30, 0x21, 0x4c, 0xc4, 0x0e,
	0x8b, 0xbc, 0x02, 0x88, 0x78, 0xb5, 0x2a, 0x95, 0x52, 0xb0, 0x8f, 0x23, 0xca, 0x14, 0x1f, 0x45,
	0x05, 0x87, 0x9b, 0x14, 0x3e, 0xe8, 0x10, 0xc9, 0x30, 0x85, 0x31, 0xc0, 0xa3, 0x92, 0xe5, 0xf1,
	0x82, 0x56, 0x6d, 0xa8, 0xd0, 0xba, 0x48, 0x85, 0x83, 0x0b, 0x55, 0x58, 0x07, 0x88, 0x7d, 0x71,
	0x80, 0x84, 0x1c, 0xfc, 0xfa, 0x88, 0xde, 0x38, 0x36, 0x5b, 0x6f, 0x1e, 0x9b, 0x1b, 0x57, 0x46,
	0x2d, 0x9e, 0x4c, 0xb7, 0x47, 0x9b, 0x63, 0xb3, 0xdd, 0x3c, 0x36, 0xe3, 0x51, 0x61, 0x78, 0x34,
	0x33, 0x36, 0x4a, 0x66, 0xc6, 0x46, 0xc9, 0x0c, 0x17, 0x4f, 0xf2, 0xa4, 0xfb, 0xfe, 0x84, 0x38,
	0x28, 0xa0, 0x44, 0x3e, 0xed, 0x0e, 0x5b, 0xe4, 0xa8, 0x2f, 0x22, 0x9c, 0xf6, 0x8b, 0x08, 0xba,
	0x0a, 0x90, 0xdd, 0xb9, 0x94, 0x38, 0xf0, 0x1c, 0x0f, 0x8f, 0x99, 0xe4, 0x8f, 0x53, 0xb6, 0x92,
	0x54, 0xc4, 0x63, 0x26, 0x8d, 0x8a, 0xe8, 0xbb, 0x87, 0x82, 0xea, 0x84, 0x64, 0xbf, 0x91, 0x90,
	0x34, 0xde, 0x8e, 0xff, 0x91, 0x03, 0xfb, 0x09, 0x38, 0x7e, 0x9d, 0x54, 0xda, 0x2b, 0xb0, 0xd1,
	0x21, 0xaa, 0x6e, 0x74, 0x88, 0xea, 0xa1, 0xd4, 0x3b, 0xea, 0x06, 0xb2, 0xb3, 0x19, 0xab, 0xd8,
	0x7c, 0x07, 0x95, 0x62, 0x2f, 0x4b, 0xe7, 0xc1, 0xf7, 0x8a, 0xef, 0x1e, 0x0c, 0x19, 0x25, 0x9c,
	0x4e, 0x88, 0x9a, 0x67, 0x17, 0x94, 0x64, 0x4e, 0x91, 0x65, 0xdd, 0xe6, 0x8c, 0x45, 0x96, 0x75,
	0xa3, 0x43, 0x8e, 0xaf, 0x6c, 0xce, 0xe7, 0x00, 0xea, 0x5a, 0xa6, 0xd6, 0x16, 0x51, 0xb5, 0xb6,
	0x88, 0xda, 0xe1, 0x5e, 0x2d, 0xfc, 0x9b, 0x05, 0xa3, 0x67, 0x42, 0xa5, 0xb1, 0x2b, 0x60, 0xcf,
	0x84, 0x49, 0x62, 0xf8, 0xf9, 0x41, 0x62, 0x6c, 0x02, 0x4e, 0x21, 0x64, 0xd5, 0x7d, 0x55, 0x81,
	0x1c, 0x35, 0x7c, 0xb7, 0x1d, 0xfe, 0x7f, 0x2d, 0xf0, 0x23, 0x96, 0xcf, 0x79, 0x8b, 0x00, 0x1f,
	0xa2, 0xd1, 0x6b, 0x64, 0x54, 0xe7, 0xa2, 0x8c, 0xea, 0x5e, 0x98, 0x51, 0xa9, 0xb6, 0x0e, 0xbb,
	0x6b, 0xab, 0x11, 0x78, 0xd4, 0x2e, 0xf0, 0x17, 0x16, 0xc0, 0x51, 0x56, 0x88, 0xb2, 0x3a, 0x2e,
	0x78, 0xbc, 0xd3, 0xb3, 0xc3, 0xcd, 0xc6, 0x05, 0xf8, 0x56, 0x2a, 0x57, 0x77, 0xe1, 0x07, 0xe0,
	0x14, 0xac, 0x5a, 0x34, 0x8f, 0xec, 0xf5, 0x5b, 0x02, 0xcd, 0x34, 0x1f, 0x13, 0x9c, 0x77, 0x3c,
	0x26, 0xa0, 0x72, 0xb0, 0x41, 0x45, 0xe5, 0xe8, 0xdb, 0x08, 0x9e, 0x4f, 0x5f, 0x0a, 0x19, 0xfe,
	0xc7, 0x02, 0x9f, 0x4e, 0xab, 0x3b, 0xe3, 0x7e, 0x8f, 0xcf, 0x25, 0xf7, 0x60, 0x48, 0xb6, 0xeb,
	0x6e, 0x0a, 0x34, 0x4f, 0xaf, 0xc7, 0x93, 0xbf, 0x5a, 0xe0, 0x51, 0xee, 0x7a, 0x4f, 0xd6, 0xf8,
	0x68, 0x2b, 0x6d, 0xb9, 0x75, 0x82, 0x32, 0xb2, 0x3a, 0xef, 0x94, 0xb5, 0x0f, 0x7a, 0xd5, 0xc2,
	0x63, 0x5b, 0xbe, 0x53, 0x0b, 0xff, 0x0f, 0x0b, 0x46, 0xcf, 0x79, 0x4e, 0xfc, 0xbb, 0xc8, 0xfa,
	0xe5, 0xda, 0xb7, 0xcd, 0x6d, 0x99, 0xb3, 0x75, 0x5b, 0x76, 0x17, 0x5c, 0x59, 0xf0, 0x18, 0x1d,
	0xab, 0xdd, 0x86, 0x8a, 0xa5, 0x71, 0x27, 0x36, 0x6c, 0xde, 0x89, 0x85, 0x7f, 0xd6, 0xc7, 0xea,
	0x9d, 0x45, 0xf8, 0x04, 0x1c, 0x3c, 0x46, 0x5d, 0x7c, 0x70, 0xa5, 0xa9, 0xda, 0xa2, 0x76, 0x6b,
	0x7c, 0x35, 0x2c, 0xd7, 0xf5, 0xfc, 0xd1, 0x91, 0xe7, 0xfe, 0x38, 0x00, 0xe7, 0x59, 0x92, 0xf2,
	0xe0, 0x06, 0xf8, 0xb3, 0x24, 0xe5, 0x27, 0xb4, 0xa3, 0x45, 0x8f, 0x33, 0x1e, 0x0e, 0x7c, 0x0f,
	0xb7, 0xd2, 0x02, 0x0d, 0xba, 0x04, 0x1a, 0xc3, 0xa8, 0x60, 0xf1, 0x92, 0xcd, 0x4d, 0xab, 0x65,
	0xc8, 0x5a, 0x0e, 0xe7, 0x62, 0x39, 0xee, 0x62, 0x93, 0x1b, 0xa7, 0xef, 0x50, 0x3f, 0xb1, 0x04,
	0x13, 0x18, 0x25, 0x94, 0xa4, 0xe4, 0x78, 0x48, 0xdc, 0xfb, 0xb4, 0x5a, 0x9d, 0xb7, 0x22, 0x33,
	0x1d, 0x7c, 0x06, 0xb0, 0xca, 0x4b, 0x2e, 0x45, 0x7a, 0xc6, 0xa7, 0xe3, 0xd1, 0x9b, 0x91, 0xde,
	0x98, 0x0c, 0xee, 0x81, 0xa7, 0xfd, 0x56, 0x8e, 0x3d, 0x62, 0x7c, 0x5b, 0xc4, 0x9a, 0x23, 0x7c,
	0x0d, 0xa3, 0x97, 0x5a, 0x30, 0xf3, 0x02, 0x68, 0x35, 0x5e, 0x00, 0x03, 0x9d, 0xf5, 0xf4, 0xab,
	0x20, 0xe5, 0xb9, 0x5b, 0xe0, 0xa2, 0x2a, 0xcd, 0x7d, 0xac, 0xa7, 0x8c, 0x9d, 0xf2, 0x48, 0x0d,
	0x07, 0x5f, 0x83, 0xfd, 0x33, 0x56, 0x9e, 0x60, 0xbd, 0x3b, 0x11, 0xe5, 0x94, 0x97, 0x94, 0x4d,
	0xfc, 0xe8, 0xd2, 0x19, 0x2b, 0x8f, 0xf2, 0xa4, 0xfa, 0x3e, 0x8e, 0x85, 0x0f, 0xc0, 0xd3, 0x1b,
	0xcb, 0xe0, 0x53, 0xf0, 0xb4, 0x76, 0x65, 0xf3, 0x11, 0x59, 0xcf, 0x47, 0xf5, 0xe4, 0xe9, 0x90,
	0xb4, 0xf8, 0xe0, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x12, 0x4e, 0x8b, 0xd1, 0xfa, 0x1e, 0x00,
	0x00,
}
